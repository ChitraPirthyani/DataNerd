<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Commodities (Real commodity prices, 1850-2018 (2))' inline='true' name='federated.14elmov11jewd211urnu11x7ujg7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Real commodity prices, 1850-2018 (2)' name='excel-direct.0owvhg61t87uys1971t0n0995j0n'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='/Users/chitrapirthyani/Downloads/Real commodity prices, 1850-2018 (2).xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Animal Products 1]' />
            <value name='[Energy 1]' />
            <value name='[Metals 1]' />
            <value name='[Minerals 1]' />
            <value name='[Precious Metals 1]' />
            <value name='[Softs]' />
            <value name='[grains 1]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Commodities].[Animal Products 1]' />
              <field name='[Commodities].[Energy 1]' />
              <field name='[Commodities].[Metals 1]' />
              <field name='[Commodities].[Minerals 1]' />
              <field name='[Commodities].[Precious Metals 1]' />
              <field name='[Commodities].[Softs]' />
              <field name='[Commodities].[grains 1]' />
            </group>
          </groups>
          <relation connection='excel-direct.0owvhg61t87uys1971t0n0995j0n' name='Commodities' table='[Commodities$]' type='table'>
            <columns gridOrigin='A1:BC171:no:A1:BC171:2' header='yes' lost='0' outcome='1' processed='8751'>
              <column datatype='date' date-parse-format='yyyy' name='(1900=100)' ordinal='0' />
              <column datatype='real' name='Animal Products' ordinal='1' />
              <column datatype='real' name='Animal Products 1' ordinal='2' />
              <column datatype='real' name='Animal products Beef' ordinal='3' />
              <column datatype='real' name='Hides' ordinal='4' />
              <column datatype='real' name='Lamb' ordinal='5' />
              <column datatype='real' name='Pork' ordinal='6' />
              <column datatype='real' name='Energy' ordinal='7' />
              <column datatype='real' name='Energy 1' ordinal='8' />
              <column datatype='real' name='Energy Coal' ordinal='9' />
              <column datatype='real' name='Natural gas' ordinal='10' />
              <column datatype='real' name='Petroleum' ordinal='11' />
              <column datatype='real' name='grains' ordinal='12' />
              <column datatype='real' name='grains 1' ordinal='13' />
              <column datatype='real' name='Grains Barley' ordinal='14' />
              <column datatype='real' name='Corn' ordinal='15' />
              <column datatype='real' name='Rice' ordinal='16' />
              <column datatype='real' name='Rye' ordinal='17' />
              <column datatype='real' name='Wheat' ordinal='18' />
              <column datatype='real' name='Metals' ordinal='19' />
              <column datatype='real' name='Metals 1' ordinal='20' />
              <column datatype='real' name='Metals Aluminum' ordinal='21' />
              <column datatype='real' name='Chromium' ordinal='22' />
              <column datatype='real' name='Copper' ordinal='23' />
              <column datatype='real' name='Lead' ordinal='24' />
              <column datatype='real' name='Manganese' ordinal='25' />
              <column datatype='real' name='Nickel' ordinal='26' />
              <column datatype='real' name='Steel' ordinal='27' />
              <column datatype='real' name='Tin' ordinal='28' />
              <column datatype='real' name='Zinc' ordinal='29' />
              <column datatype='real' name='Minerals' ordinal='30' />
              <column datatype='real' name='Minerals 1' ordinal='31' />
              <column datatype='real' name='Minerals Bauxite' ordinal='32' />
              <column datatype='real' name='Iron ore' ordinal='33' />
              <column datatype='real' name='Phosphate' ordinal='34' />
              <column datatype='real' name='Potash' ordinal='35' />
              <column datatype='real' name='Sulfur' ordinal='36' />
              <column datatype='real' name='Precious Metals' ordinal='37' />
              <column datatype='real' name='Precious Metals 1' ordinal='38' />
              <column datatype='real' name='Precious Metals Gold' ordinal='39' />
              <column datatype='real' name='Platinum' ordinal='40' />
              <column datatype='real' name='Silver' ordinal='41' />
              <column datatype='real' name='Softs' ordinal='42' />
              <column datatype='real' name='Softs 1' ordinal='43' />
              <column datatype='real' name='Softs Cocoa' ordinal='44' />
              <column datatype='real' name='Coffee' ordinal='45' />
              <column datatype='real' name='Cotton' ordinal='46' />
              <column datatype='real' name='Cottonseed' ordinal='47' />
              <column datatype='real' name='Palm oil' ordinal='48' />
              <column datatype='real' name='Peanuts' ordinal='49' />
              <column datatype='real' name='Rubber' ordinal='50' />
              <column datatype='real' name='Sugar' ordinal='51' />
              <column datatype='real' name='Tea' ordinal='52' />
              <column datatype='real' name='Tobacco' ordinal='53' />
              <column datatype='real' name='Wool' ordinal='54' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Commodities]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BC171:no:A1:BC171:2&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8751</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(1900=100)</remote-name>
            <remote-type>7</remote-type>
            <local-name>[(1900=100)]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>(1900=100)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal Products</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal Products]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Animal Products</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal products Beef</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal products Beef]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Animal products Beef</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hides</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hides]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Hides</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lamb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lamb]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Lamb</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pork</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pork]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Pork</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Energy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Coal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy Coal]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Energy Coal</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Natural gas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Natural gas]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Natural gas</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Petroleum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Petroleum]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Petroleum</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grains</remote-name>
            <remote-type>5</remote-type>
            <local-name>[grains]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>grains</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grains Barley</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grains Barley]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Grains Barley</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Corn]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Corn</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rice]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Rice</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rye</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rye]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Rye</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wheat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wheat]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Wheat</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Metals]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Metals</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metals Aluminum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Metals Aluminum]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Metals Aluminum</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chromium</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Chromium]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Chromium</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Copper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Copper]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Copper</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lead</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lead]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Lead</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manganese</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Manganese]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Manganese</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nickel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nickel]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Nickel</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Steel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Steel]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Steel</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tin]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Tin</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zinc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Zinc]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Zinc</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minerals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Minerals]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Minerals</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minerals Bauxite</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Minerals Bauxite]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Minerals Bauxite</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Iron ore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Iron ore]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Iron ore</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phosphate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Phosphate]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Phosphate</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Potash</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Potash]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Potash</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sulfur</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sulfur]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Sulfur</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precious Metals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precious Metals]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Precious Metals</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precious Metals Gold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precious Metals Gold]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Precious Metals Gold</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Platinum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Platinum]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Platinum</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Silver</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Silver]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Silver</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Softs 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Softs 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Softs 1</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Softs Cocoa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Softs Cocoa]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Softs Cocoa</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coffee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coffee]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Coffee</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cotton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cotton]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Cotton</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cottonseed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cottonseed]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Cottonseed</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Palm oil</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Palm oil]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Palm oil</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Peanuts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Peanuts]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Peanuts</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rubber</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rubber]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Rubber</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sugar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sugar]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Sugar</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tea</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tea]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Tea</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tobacco</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tobacco]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Tobacco</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wool</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wool]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Wool</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Animal Products]' role='measure' type='quantitative' />
      <column caption='% change in price' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Pivot Field Values])) - LOOKUP(ZN(SUM([Pivot Field Values])), -1)) / ABS(LOOKUP(ZN(SUM([Pivot Field Values])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pricefactor -30 --20' datatype='real' name='[Calculation_1047509184642551809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; -20&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; -30&#10;THEN 0&#10;ELSE&#10;([Calculation1])&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Energy]' role='measure' type='quantitative' />
      <column datatype='real' name='[Metals]' role='measure' type='quantitative' />
      <column datatype='real' name='[Minerals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Commodities' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='PRices' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column datatype='real' name='[Precious Metals]' role='measure' type='quantitative' />
      <column datatype='real' name='[Softs 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[grains]' role='measure' type='quantitative' />
      <column caption='pricefactor 10-25' datatype='real' name='[pricefactor -30 --20 (copy 2) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; 25&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; 10&#10;THEN 0&#10;ELSE&#10;([Calculation1]) -80&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pricefactor 0-10' datatype='real' name='[pricefactor -30 --20 (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; 10&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; 0&#10;THEN 0&#10;ELSE&#10;([Calculation1])-60&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pricefactor  -10-0' datatype='real' name='[pricefactor -30 --20 (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; 0&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; -10&#10;THEN 0&#10;ELSE&#10;([Calculation1])-40&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pricefactor -20--10' datatype='real' name='[pricefactor -30 --20 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; -10&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; -20&#10;THEN 0&#10;ELSE&#10;([Calculation1])-20&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Animal Products]' derivation='Sum' name='[sum:Animal Products:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy]' derivation='Sum' name='[sum:Energy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Metals]' derivation='Sum' name='[sum:Metals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Minerals]' derivation='Sum' name='[sum:Minerals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Precious Metals]' derivation='Sum' name='[sum:Precious Metals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Softs 1]' derivation='Sum' name='[sum:Softs 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[grains]' derivation='Sum' name='[sum:grains:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1047509184642551809]' derivation='User' name='[usr:Calculation_1047509184642551809:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.14elmov11jewd211urnu11x7ujg7].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[pricefactor -30 --20 (copy 2) (copy)]' derivation='User' name='[usr:pricefactor -30 --20 (copy 2) (copy):qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.14elmov11jewd211urnu11x7ujg7].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[pricefactor -30 --20 (copy 2)]' derivation='User' name='[usr:pricefactor -30 --20 (copy 2):qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.14elmov11jewd211urnu11x7ujg7].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[pricefactor -30 --20 (copy) (copy)]' derivation='User' name='[usr:pricefactor -30 --20 (copy) (copy):qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.14elmov11jewd211urnu11x7ujg7].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[pricefactor -30 --20 (copy)]' derivation='User' name='[usr:pricefactor -30 --20 (copy):qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.14elmov11jewd211urnu11x7ujg7].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.0933333' measure-ordering='alphabetic' measure-percentage='0.906667' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-10-medium' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[usr:pricefactor -30 --20 (copy) (copy):qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[usr:pricefactor -30 --20 (copy 2) (copy):qk:1]&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Minerals:qk]&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Energy:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[usr:pricefactor -30 --20 (copy 2):qk:1]&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Precious Metals:qk]&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Metals:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[usr:Calculation_1047509184642551809:qk:1]&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:grains:qk]&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Softs 1:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[usr:pricefactor -30 --20 (copy):qk:1]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Animal Products:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Real commodity prices, 1850-2018 (2)' inline='true' name='federated.1xqlit106fi8ki0zv9m5u0olthy4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Real commodity prices, 1850-2018 (2)' name='excel-direct.1ed17zo0m8v44b1bswpg7041imdl'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='/Users/chitrapirthyani/Downloads/Real commodity prices, 1850-2018 (2).xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Animal products Beef]' />
            <value name='[Chromium]' />
            <value name='[Coffee]' />
            <value name='[Copper]' />
            <value name='[Corn]' />
            <value name='[Cotton]' />
            <value name='[Cottonseed]' />
            <value name='[Energy Coal]' />
            <value name='[Grains Barley]' />
            <value name='[Hides]' />
            <value name='[Iron ore]' />
            <value name='[Lamb]' />
            <value name='[Lead]' />
            <value name='[Manganese]' />
            <value name='[Metals Aluminum]' />
            <value name='[Minerals Bauxite]' />
            <value name='[Natural gas]' />
            <value name='[Nickel]' />
            <value name='[Palm oil]' />
            <value name='[Peanuts]' />
            <value name='[Petroleum]' />
            <value name='[Phosphate]' />
            <value name='[Platinum]' />
            <value name='[Pork]' />
            <value name='[Potash]' />
            <value name='[Precious Metals Gold]' />
            <value name='[Rice]' />
            <value name='[Rubber]' />
            <value name='[Rye]' />
            <value name='[Silver]' />
            <value name='[Softs Cocoa]' />
            <value name='[Steel]' />
            <value name='[Sugar]' />
            <value name='[Sulfur]' />
            <value name='[Tea]' />
            <value name='[Tin]' />
            <value name='[Tobacco]' />
            <value name='[Wheat]' />
            <value name='[Wool]' />
            <value name='[Zinc]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Commodities].[Animal products Beef]' />
              <field name='[Commodities].[Chromium]' />
              <field name='[Commodities].[Coffee]' />
              <field name='[Commodities].[Copper]' />
              <field name='[Commodities].[Corn]' />
              <field name='[Commodities].[Cotton]' />
              <field name='[Commodities].[Cottonseed]' />
              <field name='[Commodities].[Energy Coal]' />
              <field name='[Commodities].[Grains Barley]' />
              <field name='[Commodities].[Hides]' />
              <field name='[Commodities].[Iron ore]' />
              <field name='[Commodities].[Lamb]' />
              <field name='[Commodities].[Lead]' />
              <field name='[Commodities].[Manganese]' />
              <field name='[Commodities].[Metals Aluminum]' />
              <field name='[Commodities].[Minerals Bauxite]' />
              <field name='[Commodities].[Natural gas]' />
              <field name='[Commodities].[Nickel]' />
              <field name='[Commodities].[Palm oil]' />
              <field name='[Commodities].[Peanuts]' />
              <field name='[Commodities].[Petroleum]' />
              <field name='[Commodities].[Phosphate]' />
              <field name='[Commodities].[Platinum]' />
              <field name='[Commodities].[Pork]' />
              <field name='[Commodities].[Potash]' />
              <field name='[Commodities].[Precious Metals Gold]' />
              <field name='[Commodities].[Rice]' />
              <field name='[Commodities].[Rubber]' />
              <field name='[Commodities].[Rye]' />
              <field name='[Commodities].[Silver]' />
              <field name='[Commodities].[Softs Cocoa]' />
              <field name='[Commodities].[Steel]' />
              <field name='[Commodities].[Sugar]' />
              <field name='[Commodities].[Sulfur]' />
              <field name='[Commodities].[Tea]' />
              <field name='[Commodities].[Tin]' />
              <field name='[Commodities].[Tobacco]' />
              <field name='[Commodities].[Wheat]' />
              <field name='[Commodities].[Wool]' />
              <field name='[Commodities].[Zinc]' />
            </group>
          </groups>
          <relation connection='excel-direct.1ed17zo0m8v44b1bswpg7041imdl' name='Commodities' table='[Commodities$]' type='table'>
            <columns gridOrigin='A1:BC171:no:A1:BC171:2' header='yes' lost='0' outcome='1' processed='8751'>
              <column datatype='date' date-parse-format='yyyy' name='(1900=100)' ordinal='0' />
              <column datatype='real' name='Animal Products' ordinal='1' />
              <column datatype='real' name='Animal Products 1' ordinal='2' />
              <column datatype='real' name='Animal products Beef' ordinal='3' />
              <column datatype='real' name='Hides' ordinal='4' />
              <column datatype='real' name='Lamb' ordinal='5' />
              <column datatype='real' name='Pork' ordinal='6' />
              <column datatype='real' name='Energy' ordinal='7' />
              <column datatype='real' name='Energy 1' ordinal='8' />
              <column datatype='real' name='Energy Coal' ordinal='9' />
              <column datatype='real' name='Natural gas' ordinal='10' />
              <column datatype='real' name='Petroleum' ordinal='11' />
              <column datatype='real' name='grains' ordinal='12' />
              <column datatype='real' name='grains 1' ordinal='13' />
              <column datatype='real' name='Grains Barley' ordinal='14' />
              <column datatype='real' name='Corn' ordinal='15' />
              <column datatype='real' name='Rice' ordinal='16' />
              <column datatype='real' name='Rye' ordinal='17' />
              <column datatype='real' name='Wheat' ordinal='18' />
              <column datatype='real' name='Metals' ordinal='19' />
              <column datatype='real' name='Metals 1' ordinal='20' />
              <column datatype='real' name='Metals Aluminum' ordinal='21' />
              <column datatype='real' name='Chromium' ordinal='22' />
              <column datatype='real' name='Copper' ordinal='23' />
              <column datatype='real' name='Lead' ordinal='24' />
              <column datatype='real' name='Manganese' ordinal='25' />
              <column datatype='real' name='Nickel' ordinal='26' />
              <column datatype='real' name='Steel' ordinal='27' />
              <column datatype='real' name='Tin' ordinal='28' />
              <column datatype='real' name='Zinc' ordinal='29' />
              <column datatype='real' name='Minerals' ordinal='30' />
              <column datatype='real' name='Minerals 1' ordinal='31' />
              <column datatype='real' name='Minerals Bauxite' ordinal='32' />
              <column datatype='real' name='Iron ore' ordinal='33' />
              <column datatype='real' name='Phosphate' ordinal='34' />
              <column datatype='real' name='Potash' ordinal='35' />
              <column datatype='real' name='Sulfur' ordinal='36' />
              <column datatype='real' name='Precious Metals' ordinal='37' />
              <column datatype='real' name='Precious Metals 1' ordinal='38' />
              <column datatype='real' name='Precious Metals Gold' ordinal='39' />
              <column datatype='real' name='Platinum' ordinal='40' />
              <column datatype='real' name='Silver' ordinal='41' />
              <column datatype='real' name='Softs' ordinal='42' />
              <column datatype='real' name='Softs 1' ordinal='43' />
              <column datatype='real' name='Softs Cocoa' ordinal='44' />
              <column datatype='real' name='Coffee' ordinal='45' />
              <column datatype='real' name='Cotton' ordinal='46' />
              <column datatype='real' name='Cottonseed' ordinal='47' />
              <column datatype='real' name='Palm oil' ordinal='48' />
              <column datatype='real' name='Peanuts' ordinal='49' />
              <column datatype='real' name='Rubber' ordinal='50' />
              <column datatype='real' name='Sugar' ordinal='51' />
              <column datatype='real' name='Tea' ordinal='52' />
              <column datatype='real' name='Tobacco' ordinal='53' />
              <column datatype='real' name='Wool' ordinal='54' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Commodities]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BC171:no:A1:BC171:2&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8751</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(1900=100)</remote-name>
            <remote-type>7</remote-type>
            <local-name>[(1900=100)]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>(1900=100)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal Products</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal Products]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Animal Products</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Animal Products 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Animal Products 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Animal Products 1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Energy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Energy 1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grains</remote-name>
            <remote-type>5</remote-type>
            <local-name>[grains]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>grains</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grains 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[grains 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>grains 1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Metals]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Metals</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metals 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Metals 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Metals 1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minerals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Minerals]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Minerals</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minerals 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Minerals 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Minerals 1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precious Metals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precious Metals]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Precious Metals</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precious Metals 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precious Metals 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Precious Metals 1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Softs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Softs]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Softs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Softs 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Softs 1]</local-name>
            <parent-name>[Commodities]</parent-name>
            <remote-alias>Softs 1</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% change in price' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Price (copy)])) - LOOKUP(ZN(SUM([Price (copy)])), -1)) / ABS(LOOKUP(ZN(SUM([Price (copy)])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Price (copy)]) / TOTAL(SUM([Price (copy)]))'>
          <table-calc ordering-type='RowInPane' />
        </calculation>
      </column>
      <column caption='pricefact -30-20' datatype='real' name='[Calculation_1039487147793367044]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; -20&#10;   THEN 20&#10;&#10;&#10;ELSE&#10;([Calculation1])&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pricefact -20-10' datatype='real' name='[Calculation_1039487147795017733]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; -10&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; -20&#10;THEN 0&#10;ELSE&#10;([Calculation1])-20&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='price fact -10-5' datatype='real' name='[Calculation_1039487147795673094]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; 5&#10;    THEN 20&#10;ELSEIF  ([Calculation1]) &lt; -10&#10;       THEN 0&#10;     ELSE&#10;       ([Calculation1]) - 20&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='price fact 5-15' datatype='real' name='[Calculation_1039487147796250631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; 15&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; 5&#10;THEN 0&#10;ELSE&#10;([Calculation1])-20&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pricefact 15-25' datatype='real' name='[Calculation_1039487147796369416]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation1]) &gt; 25&#10;THEN 20&#10;ELSEIF  ([Calculation1]) &lt; 15&#10;THEN 0&#10;&#10;ELSE&#10;([Calculation1]) - 20&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Energy 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Metals 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Minerals 1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Commodity' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column datatype='real' name='[Price (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Pivot Field Values]' />
      </column>
      <column datatype='real' name='[Softs 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[grains 1]' role='measure' type='quantitative' />
      <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy 1]' derivation='Sum' name='[sum:Energy 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Metals 1]' derivation='Sum' name='[sum:Metals 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Minerals 1]' derivation='Sum' name='[sum:Minerals 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Softs 1]' derivation='Sum' name='[sum:Softs 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[grains 1]' derivation='Sum' name='[sum:grains 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1039487147793367044]' derivation='User' name='[usr:Calculation_1039487147793367044:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1039487147795017733]' derivation='User' name='[usr:Calculation_1039487147795017733:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1039487147795673094]' derivation='User' name='[usr:Calculation_1039487147795673094:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1039487147796250631]' derivation='User' name='[usr:Calculation_1039487147796250631:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1039487147796369416]' derivation='User' name='[usr:Calculation_1039487147796369416:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[Calculation1]' ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.158519' measure-ordering='alphabetic' measure-percentage='0.841482' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147795673094:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147796369416:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147793367044:qk:1]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147795017733:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147796250631:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Pivot Field Names:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Grains Barley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rye&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Animal products Beef&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petroleum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Potash&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sugar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hides&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Precious Metals Gold&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palm oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wool&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chromium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phosphate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natural gas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tobacco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manganese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sulfur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Metals Aluminum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nickel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wheat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peanuts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zinc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iron ore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Softs Cocoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Energy Coal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rubber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Platinum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minerals Bauxite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Copper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pork&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147795673094:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Softs 1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147796369416:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147793367044:qk:1]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Metals 1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:grains 1:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Minerals 1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147795017733:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[usr:Calculation_1039487147796250631:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Energy 1:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Pivot Field Names:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Grains Barley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rye&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Animal products Beef&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petroleum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Potash&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sugar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hides&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Precious Metals Gold&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palm oil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wool&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chromium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phosphate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natural gas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tobacco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonseed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manganese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sulfur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Metals Aluminum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nickel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wheat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peanuts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zinc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iron ore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Softs Cocoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Energy Coal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rubber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Platinum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minerals Bauxite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Copper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pork&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Behavior of Prices | 1900-2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Commodities (Real commodity prices, 1850-2018 (2))' name='federated.14elmov11jewd211urnu11x7ujg7' />
          </datasources>
          <datasource-dependencies datasource='federated.14elmov11jewd211urnu11x7ujg7'>
            <column datatype='date' name='[(1900=100)]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Animal Products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Energy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Metals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Minerals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Precious Metals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Softs 1]' role='measure' type='quantitative' />
            <column datatype='real' name='[grains]' role='measure' type='quantitative' />
            <column-instance column='[(1900=100)]' derivation='None' name='[none:(1900=100):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Animal Products]' derivation='Sum' name='[sum:Animal Products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy]' derivation='Sum' name='[sum:Energy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metals]' derivation='Sum' name='[sum:Metals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Minerals]' derivation='Sum' name='[sum:Minerals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Precious Metals]' derivation='Sum' name='[sum:Precious Metals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Softs 1]' derivation='Sum' name='[sum:Softs 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[grains]' derivation='Sum' name='[sum:grains:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14elmov11jewd211urnu11x7ujg7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Animal Products:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Energy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Minerals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:grains:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Metals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Precious Metals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Softs 1:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14elmov11jewd211urnu11x7ujg7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Animal Products:qk]&quot;</bucket>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Energy:qk]&quot;</bucket>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Minerals:qk]&quot;</bucket>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:grains:qk]&quot;</bucket>
              <bucket>&quot;[federated.14elmov11jewd211urnu11x7ujg7].[sum:Metals:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.14elmov11jewd211urnu11x7ujg7].[none:(1900=100):qk]' included-values='in-range'>
            <min>#1900-01-01#</min>
            <max>#2018-01-01#</max>
          </filter>
          <slices>
            <column>[federated.14elmov11jewd211urnu11x7ujg7].[none:(1900=100):qk]</column>
            <column>[federated.14elmov11jewd211urnu11x7ujg7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14elmov11jewd211urnu11x7ujg7].[none:(1900=100):qk]' scope='cols' value='Years' />
            <format attr='width' field='[federated.14elmov11jewd211urnu11x7ujg7].[Multiple Values]' value='48' />
            <format attr='title' class='0' field='[federated.14elmov11jewd211urnu11x7ujg7].[Multiple Values]' scope='rows' value='Price' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.14elmov11jewd211urnu11x7ujg7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='231' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14elmov11jewd211urnu11x7ujg7].[Multiple Values]</rows>
        <cols>[federated.14elmov11jewd211urnu11x7ujg7].[none:(1900=100):qk]</cols>
      </table>
      <simple-id uuid='{1D356BC6-8771-42E6-B67C-068D3617D4AD}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Line graph of prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Real commodity prices, 1850-2018 (2)' name='federated.1xqlit106fi8ki0zv9m5u0olthy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqlit106fi8ki0zv9m5u0olthy4'>
            <column datatype='date' name='[(1900=100)]' role='dimension' type='ordinal' />
            <column caption='Commodity' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(1900=100)]' derivation='Year-Trunc' name='[tyr:(1900=100):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]' included-values='in-range'>
            <min>#1900-01-01 00:00:00#</min>
            <max>#2018-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</cols>
      </table>
      <simple-id uuid='{430E79E7-4E27-4264-9981-215DFA6A0133}' />
    </worksheet>
    <worksheet name='Sheet 3 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>General pricing </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Real commodity prices, 1850-2018 (2)' name='federated.1xqlit106fi8ki0zv9m5u0olthy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqlit106fi8ki0zv9m5u0olthy4'>
            <column datatype='date' name='[(1900=100)]' role='dimension' type='ordinal' />
            <column caption='Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(1900=100)]' derivation='Year-Trunc' name='[tyr:(1900=100):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</cols>
      </table>
      <simple-id uuid='{2821E20F-F67C-46D4-973A-38CF3EE38DB0}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Examining Soft goods&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Real commodity prices, 1850-2018 (2)' name='federated.1xqlit106fi8ki0zv9m5u0olthy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqlit106fi8ki0zv9m5u0olthy4'>
            <column datatype='date' name='[(1900=100)]' role='dimension' type='ordinal' />
            <column caption='Commodity' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(1900=100)]' derivation='Year-Trunc' name='[tyr:(1900=100):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pivot Field Names:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Animal products Beef&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Chromium&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Copper&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Corn&quot;' />
                <groupfilter from='&quot;Energy Coal&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Nickel&quot;' />
                <groupfilter from='&quot;Petroleum&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Silver&quot;' />
                <groupfilter from='&quot;Steel&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Sulfur&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Tin&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Wheat&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Zinc&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</cols>
      </table>
      <simple-id uuid='{89579A70-2AFB-48BC-96FC-8054E934A3EA}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Energy &#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Real commodity prices, 1850-2018 (2)' name='federated.1xqlit106fi8ki0zv9m5u0olthy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqlit106fi8ki0zv9m5u0olthy4'>
            <column datatype='date' name='[(1900=100)]' role='dimension' type='ordinal' />
            <column caption='Commodity' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(1900=100)]' derivation='Year-Trunc' name='[tyr:(1900=100):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pivot Field Names:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Animal products Beef&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Coffee&quot;' />
                <groupfilter from='&quot;Corn&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Cottonseed&quot;' />
                <groupfilter from='&quot;Grains Barley&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Minerals Bauxite&quot;' />
                <groupfilter from='&quot;Nickel&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Peanuts&quot;' />
                <groupfilter from='&quot;Phosphate&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Zinc&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</cols>
      </table>
      <simple-id uuid='{345EA297-924F-44A1-878C-FBBB32953061}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Minerals&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Real commodity prices, 1850-2018 (2)' name='federated.1xqlit106fi8ki0zv9m5u0olthy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xqlit106fi8ki0zv9m5u0olthy4'>
            <column datatype='date' name='[(1900=100)]' role='dimension' type='ordinal' />
            <column caption='Commodity' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(1900=100)]' derivation='Year-Trunc' name='[tyr:(1900=100):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Pivot Field Names:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Animal products Beef&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Hides&quot;' />
                <groupfilter from='&quot;Lamb&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Metals Aluminum&quot;' />
                <groupfilter from='&quot;Natural gas&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Petroleum&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Platinum&quot;' />
                <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;Pork&quot;' />
                <groupfilter from='&quot;Precious Metals Gold&quot;' function='range' level='[none:Pivot Field Names:nk]' to='&quot;Zinc&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</cols>
      </table>
      <simple-id uuid='{0587458B-BDD4-429B-A67D-EB4283A9BA90}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.14elmov11jewd211urnu11x7ujg7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14elmov11jewd211urnu11x7ujg7].[:Measure Names]</field>
            <field>[federated.14elmov11jewd211urnu11x7ujg7].[none:(1900=100):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26F1F758-6934-48F6-8D96-2C2271581DDC}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</field>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A87454F-EBA1-4233-87C5-51684C54119C}' />
    </window>
    <window class='worksheet' name='Sheet 3 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</field>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32244500-5A58-419E-BAE2-2345989D0454}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</field>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[tyr:(1900=100):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B7B5A55-AE81-4D4B-9B8A-19B9A0DF3CC0}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE0FF338-4D2C-48E1-8FF0-4643B1E37BC4}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xqlit106fi8ki0zv9m5u0olthy4].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBD2D22C-0389-461C-8C46-3F1128AA6B30}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aZNc2Xnf+Tt3zT1rrwJQ2Lqxo7sJiXuTFEVSLdmyLa8TivGM7bFjYl5M
      xLybD+Bv4JiJmXcex9hhSfTIlkSRIilZ3ebOZovsHTtQAAqovXLf7nrOvLhZuVQulVUoFAoN
      /CMqupF5895z7z3POc/6f4RSSvECL/CcQnvaA3iBF3iaeCwBCMOQFxvICzzLeLEDvMBzjRcC
      8ALPNV4IwAs813ghAC/wXOOFALzAc40XAvACzzVeCMALPNd4bgRgZWWFMAyf9jBe4JDhuRGA
      X/7NL1laWnraw3iBQ4ahAhCGIe+//z6+73P16lU2NjZYW1t7JidSIjR4+GDxaQ/jBQ4ZjGFf
      appGIpEgn89z5MgRVldXuX79Om+88QZSSqSUz04qRD0gLDsEQfC0R/IChwhDBSAMQ9bW1rBt
      m6WlJTKZDBcvXmR5eZkLFy6glELTNIQQBzXePUO4Eq9QxzCG3vILPGcYOhsMw+ArX/kKAPPz
      8+i6fiCDeiJoBKiGfNqjeIFDhpGN4Gd58nueh+Yr4oGB4zhPezgvcIjwXHiB6vU6CWERlyal
      UulpD+cFDhGeCwGoVqtYymAinmFzdf1pD+cFDhGeCwFoVOukrDjZeIr86ubTHs4LHCI8FwJQ
      zhdJWHE0oREUG097OC9wiPBcCECjUiNu2gDIkvuUR/MChwnPhQCENa8VqxhrWNz48OqzE8Db
      J3ie99zd8yh4LgRA1v3W/788fgz542V+/BdvPcURHTy+9WffolarPe1hHDo8HwJQ87r+fTQ9
      TfCg+JRGc/AIw5D6nQ1KxRcu4O14PgSg0Zv/o4LnJyq8sb7OCTHxQgD64BMvAFJK6CcA3vNT
      G3Dngxu8euQspULhaQ/l0OETLwDVapWkYfd8riOei8xQpRSNezkMTcevv/CAbcdIAiClZHFx
      Ec/zaDQaVKvVJz2ufUNuM8dMarLnc1u3qNfrT2FEB4vc5ibTfgIA6fQK/OLi810jMVJu8MbG
      Br7vc/PmTXK5HOfOnSOZTKKUav0dVtTLVWZjqZ4x2rqF4zikUqmnNLKDQbVQZjYxgVIK2fAj
      lbADb731Fv/8n//zpzS6p4+RBGBqaopyudx6eJ2FMId58gOUi2VmRaznc1s3cRzn0I//cVGt
      1rC2/uH0crluPFr9xD+DYRhJAJRSCCG4dOkSnucRBAGapj0TBTFB3UUT8Z4x2lokAM9ymvco
      cBoNNBG9I+HJrvv1fR9ZiNLDP+nPYRBGEgDDMDhz5gwApmk+0QHtN1TDR9AroLZhUXa9Pr/4
      ZCFwfHQt2gFlw+/6rtFoMBefoFwuMz4+/jSG99TxifcCBR1pEJ3QhcB3PvlekaDhYmjR6q4F
      0aq/hXK5zHxymmLx+QkKbscnXgDCAa4/TdMJvU++GzRw/NYCEBdWlwevXCozkxinXCo/reE9
      dXyiBSAMQwy/v32iaxryORAAEbQNXFsYXa5ft9ogacfxqs9vivgnWgA8z8OU/W9RFzqB6/f9
      7llEEAR8//vf7/lcuW0hT5lxGh0C4FTqJM0XAvDM4ebNmz3+7H5wHAd9wCKva9onSgWq1+vc
      /NXHPS7NzpQP27BwOia7X3OwTYuw9sl3BgzCMycAvu/zw29+j82NnUsb67UaSb03BrCFT5IA
      lEtlMnWja2GQUiI7dgDLMHFqbQHY8gr1SxZ8XvDMCcDdW3f48sQlbnxwdcdjK6UKSSs+8PtO
      /fhZR359k9OJOQodCW9SSnTVfsW2YeFU2irQVp1EWH+xAzwzePTBHY5mZ2gs5nc8tpQvkIol
      Bn6vgk9ORmhpI8/FIy+xcPtu67MwDNE6hFwIQdD0ikkpwYnuX/fUc8uc/UwJQKVSwV6NVq1E
      WVCpVIYe71UdbMMa+L3yPzk1AWHFwzYsGhttl6aUsmeXE247nWVLBdIDnovM2H54pgTg4c17
      nMkcBeBUapbrH18bevxOW7t0/E9MHowsRSkNYa7Dzem4mHSnOMhGdM9hGCLcaNXXXInnfvKD
      gv3wTAlALV8m1mR3SNkJaou5oRN4a7UbBE2JT44AVCNh9/P1VrS30WgQ27YDquakr9frpM1I
      PUzZSUrPaTBsZAEYxe34pFEplltRTSEEx/MJ3vrj7w7k+wxqw1c16YWH4r4eF/V6HcuPXuWk
      nmrRP1bLFVJ2sutYrRHieR65jU3Gk1kAsrEk5ec0HWIkAahUKrz//vvcvn2bGzducPfu3Z1/
      9ASgbVvRp5JjvFqd4Z1v/6D/Su4MN+wMJT4RArC+vs50YgyACbtN/1ir1UhY3dVwr0y8xM/+
      8ofkcjkysUg4MvE0hdzzWS45cjq04zgkEgmuXr36xBpkuK7LvbsLnL94oSeBTSlFUHVRie7r
      mbpBbWGzx4uhlEI5ASozREUKo7iCpj1TmmAP1pdXOR5Lo5QiG0/x8YNlzlw4R7Vc4YTRXQyk
      axqxhTqPygXO6eeiVHfArx7+5iGLi4ucOHFiX885kgDouk42myWZTPL6669TKBTIZDL7Wg8Q
      BAFv/8mbzBZtfnZnmS/+3a9hWW39VUqJ8CQi2Xut+dgUCwsLnDt3rvVZuVwmqdnIZi2D1meM
      Ioy+e9abZoRVD1NPIoRAFzqy7GIYBtIP+wr3+fGT3L36Y8TF863P3OUSUsquZ37Y8IMf/IB/
      9a/+1b6ec6SlL5lMcvnyZY4fP86RI0c4efLkvg5CKcXP//y/cdmbZT47y4XCOD/8z3/ZE9Uc
      pNIcH59j9e6jrs/y+TxH0lPc3njAcqk/I7QpDNxPgPfDLdZaKc8AshjZRMLrr95pQvB3L/5G
      12e/bp7kZ3/4l4e6TnpjcWXfz3ko9n4pJf7dfMvDY5sWp4pJ3n/7V61j6vU6thq8Usv1btaz
      Yq6ApRlUnDqr5f5pEwkrRqN2eF/4KFBKYVS7J3pYiko9d0P9Yuomr3KMH/+77/Bw8eF+D/Ox
      EYYhZl3te4OTQyEAa2trTJmZrs+mUxN4v1xhczOavIVCgfFEeuA5RN7tWr2ccg1TNwgU1Lz+
      q3zMtGk0nu1MyFqthlbqzmqdiY2xurqK2mWuk65pfC59luU/fY+7t+/s5zAfG+VymWkrS7nc
      311bKpX29C4PTACuXr06kJvywd37HM1O93w+H5/i/q0FADY3NhhPZAee/6g1wYOFe61/u6U6
      hmbgBAGB6n+btmE98y2Tbl2/yVysu5zxaGaGhw8WCfvQoOwEIQTnxo6zePXpePoGoVAocCo9
      1yMAUkr+7Z//Bf/6r37Em+/8ctfnPTAB2NzcHNhf2N2oYOi96k3SitPIRTfcKNdJWIMzOyeT
      YyzfaW/dslkKGaLhyP6eoIRlUy0PT6c47CjeX2Mi2b0wGLqBm6si9kj/KITAyz097qcHDx70
      2GaVUpmpxBiNSvci6rouH4gYyfOXuZov79oreaAqUG51o+/nMt9/6xJC4GxUIn22Mbx4RdM0
      9Gqk8yqloBatfm4Y4sn+XipTNwm8Z7coRimF2OjdwTQh8PK1VtR3LxBFr6t++CBx48aNrqxW
      AKdcJ2HFewSgVC6jNRktVnS7pTKPigMTAEPT8fK9KpDjOBi1IStVJcpd8Ss7qyphs/tLEATQ
      3P69UOIN2AEAQvdw+777YSv+srGxQcrrz9Khyl5XLcBuMSaiBulPA41KrYd90C3XSdpxnEr3
      YlkslTBTkW0YPzrPLz74cFfXOjAHuED0bU+0sbHBOINTlq2GwnVdNH/nrU2VPTwvWrl0Nzpe
      ooFm4Ic+pt47WZ41lmilFG/+8V9gWhZayuJsqtd2guaz8D2Y2tt1phNjrC+vMjs7+xij3Rti
      0qCyTddXToCh6chtCY6FYhGrqQLqlsXHuRJ/dxfXOlAVSJXcnojt2uIKk8mxgb85kp5m8cFi
      V5OLQTg5doT79+9TrVRIajGkkkg0TCNOzR2gZj1jRTFBEKAv1rlYGEe8n2u5jrdjNj5OXO//
      3SgYi2coreb2/PvHQVya1Kvd7umw0rQJtqXDlOsNtA6uqlw8vatWuAcqAElp9biq6uvFocbt
      THqC1YfLqBEEYCyeZn1pldxGjsnkGH4YECowjDhVr78AKP/ZKgT56IMPOTd2HNuweHX2zMAo
      /LGxGV49embP1xFC4G08nY4yygkIGm0jWEqJaAZB/Uqjy9Ctht0LmDY9y50HD0a+1sEKgLDJ
      bbZXFcdxUA939sJUljaxR9DWDE0nLDoUNnKkY0mCMEDTTSzTpuwM8BE/Y0UxpVurpOzBKuMW
      dE3vq/LtBuEA58SThnQCtA7zJQxDNC+a6EbYncBY21bVZySS3F4ffec6UAGYTo2z+mi59e+f
      /eUPuJTeOa2itJQjJnZ+mUII/HyNoOqiaxp+GKJpFrYRo+r1N6LDZ4gapV6vY2wcXP1uOrR2
      pU7sB6LJLrs8WJ7noTXTOrRt5Zu1bSq1EIJ7lfrI7tADFYC4FcPJR9b9+to6qQc+Zh///3ZY
      NUXKGFzc3gmjLgnK0WSveQ003cTQTaoDosHiGdKAFq7d4kRsj1btHnAsPc2De/cP7HoQ+fW1
      sJvPqFKukGy+f82T3fSOfRawJccbOSo8kgB4nsfCwgK5XI5Go7FjLe4whCUnqi/40x9xJnus
      7zEN3+WXi+1yx8+cuMx4ItP32O2wPa1lvNV9F8uwEUJst51a6FcYL6U8dCkStVqN9Z/eIRsf
      nA6y30hYcfKLawd2PYgEIIZJ6LQndm5zk4nm+8/EUhSbMYIbN25Q6+Pijh87wcL9+yNdbyQB
      ME2TbDbKw3j77bepVqtdzTG2agOG/SkV+a4bS0V+9f/+Vz4TfwmB6DrP1l+xXuEXy49wg6i3
      7Vg8jaWbfY/d/jdhZ3A2o+BZ3XOxTRtQeOGA3zSrwjr/SsUS3/z3fzjSfR3EXxiG/OzP3+JT
      2dMjPYP9+tOEwN2oHui91mo1LAzw259FNl2qORcyFPIFyuUyf/Dv/hgHesZtZce4+Wh5pOuN
      FAcQQrCyssKFCxdYXFwkDNuNFkbVtbaO+uKRV/qQlXcjX69w+ugVfrF4k6+cfmWk829hKjXO
      l05fAaDmOdjJyMM0sDzYjwS405uyvrZGfMWjUqkcig4yj+4vMp+Po6UOPnfRqsqIYvKAaPEb
      1SjlZaNRbc+xRtCq50jHkizm8jQcl6OJ83zo+kz0Oc9DNxhpbo4cCDt58iS6rvPZz362VUW1
      m4KYVpOGEa5VaFRJp4+ymstRdeukY8mdf9SELkRLTfDCsJUn74ay7zhNoROGIbbd9pkXcnm+
      evzX+Oid9/jyG7858rWfFO69f5Mr6bmncu2MtKlWq0xNHYzt0ajVmbBiGH40vwzDIOa155gg
      YrbYKBbIJMbR46rve10JFL7vE4sNdrHDLozgdDqNEIJEIkE2Ozgrcz9QDwKE0Eglplgp7S63
      oxNhh7jpZpxio9d2MYXek3jlVRrErRje7dxTJ4wKw5BwBFfxk8JcaoqHC6P71R8XtVKFuBnD
      xmhl6laL3fevOZJyroEXuEjL7rvSy6lZbt5d2PF6h6IeYDt8FU1cQzdxwr3ns3S6+I+Mn+Dm
      Wu+LtLTeqrAtipHT+jTv/exv9nz9/cDdO3c5bvV2uTwoJO04peW9L0K7hd/w0DUNk2hhUkoR
      lLpd2Pl7qxRWqzgqQLfifYkN7OwY7z3sn33ciUMpAFvZm4Zu4j5Gobbb8WDK9QL5Pi2RdHp3
      AFmLPBDj8QzqVxs8uHt/z2N4XKzdWGRqSKrIQaC+XCSfz/OtP/ovT/xaW1m/tjBoNBo4joMV
      RtP0fm4ZpRTjXhxbpHGUh2nFCQdQXF4t1XZk/TiUArBlsOq6QSPYe+BHqbYKtJR/wEq1Sii7
      H1bCsPG8bdeot4Xu7MRx7n7nb55KrWwQBDTu59HE031N8brg2nd/weSKeOLPIWgmu9m6ies4
      FAoFxswkQRjyvTvXeH/pDo0gIBMbx1E+mmUNNHbF/CmuXh1OonzoBKDuOaBFzASa0B4rU6Ez
      gdTz6vgY5OvdWYa6puN31AQEQdBTe3BEH2d1Zf8LsndCuVhiVh2c338QLoyf5GV3gqOJSRbu
      POFKsWYE2DZt3JpDuVAibSVYKq1zfPYyd2uShcIGGjqOCBFCMMjZY6bSvPdo+Hs7dAJQqJeJ
      dbCZ+Y/BO9QpPCl8bCvJQq77gZi6jt+ReFUqlUhp3Z6DtJ2gkj/YlACAaqXaIq96moibNnHT
      ZiyeJnd/9Ylea4vJwtJN3LpDtVAmbsZYKGySSYwzN/kSmfELCAW+FTkxB+4AQnCzXB/Kd3To
      BKDYqJKw26ueH+5tC/ACH9WhOoyLEA3FRr07wmtoBn6HbVAsFsla3ZMuYcWobB48dWC5XEZ/
      yupPJzSh4S6Xniif6lazDkPT+el/e5sHtxawdIO8p9CaLu1schxD6DS0aG4oNVgInLEJNjb6
      VyLCIRSARuBj6m1ypoC9Edg2fKdLkDTpoocu1bD7lnVN6yqLrJWqJIzuHUATGl7p4FMj6rU6
      8SGp4k8DetF/YkQCrutiSg0/9Pne7Q+Z1C/x4GqOldImodadASuEQJpNLqQh08OanOHmg8E0
      L4dOACqei96RIBcOqOfdCVW3TjKeodIo4Xh1LOmhBw2CbaE4UzfwOlSgaqHUt8hE1EaLLO4n
      nFp9pGTBg8SZ8XmufdxrWHqe99gxk3K5TMK0uZNbZWzyMjErwYnZT/FnNz5gdny+53g1OdZ8
      J4MXSd2yuFMYrL4emACESvLB8sKOk8gJVJfXw5MSNUzEB53H91AKSo08q8VHmNJFly6g44ft
      FV8TWle3SL/iYBm9Yf+t2EAnHkcgdvJOwOGsVsvG05QetlUK13X5q//wZ/y3//O/cO3Djx/r
      3PVandnkJHXPiaK7SqFrBlfOfg1d6+5zEMqQRhDtygKBGlL3fa/mDHxXByYAAsGiF+edh7e7
      Pr+9vtj6f6UUzjadX6IN3eIGoe67GLpBIDxKQR49dDGlS8xKUN1WHtk10Wr96wNkxe3Kf7px
      9Trf/qM/2ZMQuK7LW3/4nZ7C7+0Id2DCeFpQy7WWYXntw4+56Ezz2enzlJcfr4SyUi5j6jr1
      rdR1BYNcPHW3ip5IQpP7dZi/v5HKsrbWP6v1QFWg8dQUiw0oNaIXH0rJ967/omti+duHJHR8
      uftgWCAlQmgEMqBmFbGFxAgdLDMWuVo7sFUYv8VA3Q8zqYnWQ3z3B2+jfrhEejncE7fozY+v
      87XZK9y9dXvoceKQVqtNBQnuNdMMCrdWSMeSkYG8UX2sXdFpOKAgUAqBaCYp9p+ilUYJO9sO
      EMoh143NzHJjQF3Drhpk7IcOPJE5wo21aDB3NxaxErPU/WhCeqGPbnb7vW0z1hKY3cANg0i9
      CT1K2gYxQrTAwTbj1LbXB/ttPqFYoPc5G8xlplhejlJsC1eXOJKaYkJPsbq8u/iAUorN6w85
      lp2h/HD4irkbbs+DxPHxOe6+d4N6vY7ZWaFW7CU92A3WNtd5WFhtJS4qqQZ6wap+DSPZztQd
      Njc1w+ROqX8+1UgC0Gg0+OCDDygUCly/fv2xGmRYhk2uWe2zVC0zN3GKQjM4tVrJY5vd1n7C
      TvVO2BEQyMiWCPWAqlUghsKSLqZh9+wAXiN6iVJKaPR/gbZhUdkosrKywrgXGcnHJ+ZYvrc7
      ItlKpYJYqkcdG9eGr5idRSGHCZrQ0Jbq3L52k5OJmdbnqcDsoTPZDUqlIlWvgWw6KkzdGJhp
      7OoSOoRjmA0AsDHgWY7kYqhUKkgpWVtb4/r16/zWb/3WrhtkhFICCiEg74V4gU/Zh0Q6zWZt
      k2PZGZZKOTLJM3Qq/XE7SaH+kFMTR0e6zhacIMAWGiEBQcLBFhq2CnBVGBnWHePWwigCnMvl
      sDAG3pOsuNx87yqvTRxtNpaImOtGbSxRLpX5yXfe5PXZMyilsCsqCrwNqjnwJMo6fIYwwMuJ
      Od76zg/5J6e/2npex7Kz3L19lyufzrRqCHbTO0IPGjg+eKEBKHRNY5AB6FkaCBH9ER02bC46
      YVRKuX08IwnAxMQE6+vrpNNpXn/9dYrF4q4bZEQ30yxqSM5yZ/MhDWUwYSXJlxYRQlD2Q9Lb
      rH3LsPGcYNdNOEIV+YpDLSAxFcMUAlsFNGSIH4bd5wtCdF0nn8szlRobfK2ajyq6GHZ71ZP5
      xkgNNpbuLbL45+/yxcxpjCaV33x6mkf3F3nlymt9fyPdAJF+/OYjTwITiSxvHPl017NK2nFq
      6xsYhsF/+nf/kd/+h3+H6en+xF39YCofw4TQMWGHyhHPjp6hoG0rD5sjgaajlOop7BlJBTIM
      g1deeYX5+Xnm5uYeu03NZGaW715/h/H0XMT/2fT11wa4/fZiC27VAoRagJbSKBESQyFliL9t
      uxRBtHoUNvNk44MrwHKLa2Tr3Q8w4eoDWa87kV/Z5PzYyS6/fiaWIv+gv3ciCAL0w2kDA9Fk
      G+tTnxxu1llcXGS+kGBtaXf2kRY6IDxG8f66RkdF4gjViYEQfe2TpxYIOzL7KZKx6AFWfUnN
      bRCK/u15vD00sttKoQiFjx7XWNcCEiIkCH2C7Q+q6QUKqs7QzMtzmXnmt1ERTllZ7o6QIFYf
      ICThev/PHcch9hjMbk8NZZ8bb/6K1+bOUng0OAWhH4RfR1FH7bDbK6Xw7e5dd8trNAg+oq+q
      +tQE4ORMm7XMVRprlRyJWP+891DtXg3YWkWkFqLpULBDbE0j8Bt429jElB/ZBP2CXV1jnjja
      EyWeSGSore+cJ+Q5Xt9NXasEvenYRBxAcf3w9usahBmR5lg16lcWFEZPnZZSYiqPkAbGDoIf
      hD6+rePX2t5BIbShAhBq+uESgE5kEhO8++gWiVj/1N/d8tdKJVuJcGGTYqyQUpEABG0vwxZE
      kzFiUAxgGAzdGIlLXw1gap62siwvL/d8Xq/XiWkHU4i+n5gfm+VYNrKRgs3RBSAMQ2JaQKBq
      IPq7orfghx4qbrP6g+92fS6HeYJMk3ofqpsuAVBKUSwWKRQKB5r3Mpaa4ubmKrbZP/FrtyqQ
      lBLZ3DUCPFCKQlyS0HUCr96jAtmGRb1Wh8beqs+Cmrfj81Je2NdIG4+l2VzubeLnNBrYz+AO
      0IlMaI/MLBeGIXFN0giqaDsIvus71AobvDLW/b6GCYBh21T7FPN0CYCUkm9961t8+9vfPtBi
      cE1ozE2dH/h9OBKXRBuBbO8AUg8RKIophS4EMqgTyG6DKWXHKRQLLUr1XY/f2dkdPMinH7di
      1FZ6m1S7dffQJcLtFsfH5loR450QBAEmPnErKoUdhoZ0SQRVzqc8VMfiqKQanBRnx2g4vTt8
      1xPWNI3z589HHgh9+Da0nxBCcH6+vysQIFAC2SRqGgVShaimbIciWiXUmE7R9xGigRKThDJs
      tWWKmzE21jdIaHszOqXjI6Uc2nBbecFAp7ObiwJinTtE6Pp920Y9S4gZFqXV0ZpsOI0GCUMx
      kYpTLw9/D1W/zjGzzmxcETgNzESzfqMZC+i302qWRbXe63DoqwKVSqUdi4kPEppm4AX9V1DH
      9/j2xz/tkvyIFDdaRaQeAIr4pMWy6xJTPgiNoOP+4qbNxvo6yT0KgOaqoTumlBIG9OwFoOT2
      GGhew+3q/fssQtM0nPXRIsOVSolMzCCbMNkp+9ERAcetBrMJCKvt8wuhEQ4ooDLs2M4q0PLy
      MqlUikQiMXQ1O3AInarb3134y0e3kYmTvL/UTixzAw+jSaUYapECpdsaG1aICOoo9K7i+IQV
      Z215laQ1GgHvdozF0+Rzg/N6wjDEYPBkzpLo+b3/CRAAAK3ojRQpr5ZKpOImMUvh+sOdEVW/
      xnHbYyxpo1VzrWiwJjTkkIXI6yNXXbP82LFj5HK5J058tVtMZed5N+/y7ZsfUnbagrCQW6Io
      xpjMzHKvDuuVaLutuHViVhwpQ5QRtgIlq8kQI6gjNAOvoyZA1zQ2F1dJj8C73w+z6UnWVgeT
      yLquizmgVSvAy1PzLNzqjiWoPUS/DyOO6uOsLPV6ubajlN8gFTNJ2hpe0LvYub7Dj8UC71Sv
      U6wscSqrkYqbpGrrXRbiMMWl2qfpX9dbWVpaQtM0zpzZe2eRJwHTsEgkJslOnOev715DSslG
      tcB7GwWyySgwNT1+ig9Xo8S0mutgm1GLJKUrBJFemMtIYiqIEuK2rTKNjfKede6EFaMypOrI
      8zz0cPBkNnSD+qNuQ3i3iXBSSq6tHK7evgBHM9Pcff/Gzgd6VTQhMA0NIbrfjVKKD+t3CT59
      mfrXP4N9YYapTOQxnKE7oXCYIbzjDvDRRx9RLpd57733dh7wU4AmNDLj5/nezV/yo0fLzEye
      a3NGCkHZj7bamu9g6jZSSUItYIuRtJoVJMMqoQx6eoZNmI9JPzKQfRdcx8UWw4XLWHW6XYa7
      zP+o+w7vLT5eRdaTgBACtb5zPCBoRPduGTqo7mzd9eoam68cQzNNhK4zbztoWvROJ2W3jTEs
      ItzoYx90vZVvfOMbuK57qLfemBXHmHiFjNabKuvISJ79MPLIyCBEGbKVMOhlBfOWxrWN6zTi
      3bvclfnBbthRoGqDo8ie62IZw33657LzXH/3I77wtS9HNN9uwJDmmT0oNyrY3t5TkZ8kEhXB
      5ubmUIJd5VQgBaahEcpIYPzQ51r5DqvnJknMt/PPTtkOW8lyE6qKkhKhRdmhQmgEfn8vZmMb
      g5yUsnsHsCyLdDpNKpXqmlyu6/Luu+9SKBS4c+fOY9UD7AcMvX+ardDjVJxaK9KrlEJpYesm
      RdqgqEKOuctdtgTA5SOPp/YFQwSgVqkSN4cLQNyMUb6+0uK4HykjrAOlap6s2jkg9zRwMjvH
      4p17Q48xZHvVN/XoWb5Xvcnm118jtk0l1zrIzY6NWbjFtgNBCEEY9FeDtpfbNhqN0enRDcMg
      n8/z/vvv8zu/8zt7rgd4kpjMzLJUWscLJQaKUIaEwgOiyWeldDaEzwWq3GjsL0T59vUAACAA
      SURBVL+NX3UGejtq1RpjxmAKvy0c8dPcunWLU6dOgRvuanylygYp6Ubxkt0M/ABgGxaF2w8J
      PjPYG+RVizATbXmWEdDwauRPTxKPdXvmQtdh0m4/l6Pjcbz1dWIT7SRFITSCIOhJU3ek7HpH
      lUplNAHYyqO2LIsvfOELbG5ukk6n91wPsF9YLTxiduxY6/q2GadQX2mmOghC6WMY7cCIZmhs
      xDy+pGzuNjb3VdUz/Gj16bf1unUH20jveL3j43N8+P2rPJq9TUzpuxufU0QPHaKio14R2KwW
      sQ1zaK8Fx3f5zrW3+YevfrmHheFxYW341Gq1vh5Gz/Mw8djS+WKmz+3aQ6zTn+o51i0XmUq3
      d1PL1Ej50Y6wFQTTmmqQYRitz4QQNPywSyhc1x1tsYjFYly8eJHjx48zPz/P6dOnd3XzTwJK
      SW7c+C5hR8G8JjSKrsuWZheoAEPvnkT5dLPdZq03/+ZxkNTsgcSxyg+bC8DOeG38JT7tzXN5
      5uXdDcApEUfSGOBD/3B1ke/cvt4qP+2Hqyv3SE28wpt3PtrdtTswqDj9wvhJPvzpr4Ao0e/t
      n/y89V21WuVYNtohFWBoLosTCt3qDUwGpQITqXaqhK5pTIZ9PHBSo1FzadTcllEcaFpXwLJS
      qh663XJkuL7D560GuVLbxyyEwFUafvOGy40ChtF9i8VEs92mXyeQ+5fvZGMOLIzpbPn5JCCl
      RDlFxi2TYp8JrpQi5zjMz73KX99fQKpeb4hSipWGSzKWJowd4+OV0XJ4tuNHd9/v+1tTN/Bu
      beJ5Hr/47g/J/+xuS8XLbW4S06P/FwhcrYT96uW+57f9Gua2dzqherNxNU1D1wx0zcD3okVS
      2HZX88NiofRsCIBSinK9yPLGnVYEt1rPcyFuEpQXu451pEa9GfBY2ryFZnTvANV49KCzuqC8
      B7aJQUgaMWqV/ueTT7gXcdmpMqFJxkyTXLU3sc4LfdBTCKGRzZ7i+mqvQVrzGjRU1FEzFc/y
      cA/F7Y7vseJqXM/l+9ovZxPH+Ob/8x85um5xKXOCjz+KdppqcYOEpbfUlVTCxoj3j8qnwirG
      tt10RqujBkSAhRDIsNkHzop17dLVcv3ZEICVlQ84ufBHvLb6fYrliJ24UrjHtGWRrHd3AdGN
      BGW3EdkntYdo21SgwBIEUpLVRN+WSXtF3LSplQcI1BPm91ktbzJtGiR0nUaflJH1SgE7Fune
      CTvJ3WKvkNzeWGI8cwRoxlQCtesd8m8e3mJu8gyJ9HFub/SyZWRiSb4izjCTnCAbT7Py4T2U
      UlTzqyRtE6kiHqC0GOzNyqh2DGAL05ZP6A5mDtGEju8HCNPs2gECVz4bApDIf8SZuMXpRJza
      5nUAMl4eIQQzfp662554mcQ4lpmkXM8zL2qIbQKgxzWqYUhC12g4+ysA1UL/VfNJq0DVao6E
      Hr1KLei1QxZyK4yl2j74cmhQdbuPe1StE7PagQfDypKvjU4J3/BdVj0N07DIJie4nsv1ncTj
      iUzLKBXLdRYfLHLtJz/B0HXC5vFzWQtnoz8Ne0b2LjIzSR1ZHTzWyDUq0WLxrh2gUfMOvwBs
      FB9xgfbEylTvoZQk4URG7Elbo1Rq7wIJO8XZo5eprl9lytZ7VCAtplMPQyxNo9HYP85/QzcI
      av0N0CdNcOU3CphbHiO/VwAqAV21zrMTp7m90X5mm9Uivt4dCR9LTbd6KSwWVvvaFp14WFgn
      kzrS+rcen+NWn12gE+fHTvDLP/hrzo5FDCOSaLIemUggV+/3HK+kJEvvSj+ZthHlHfqYKUDX
      qXfUBHiN4PALQLB5jflY2xtwwfBZWL3BES3SqzOGAZVHre+FEIQyZKpyE6mD2LZdarZGLQgx
      NQ1/HwUAGCgA4RO2AeJeue0y3UYiJpWksi2oFrcSPCi3d78PVh8wme3mXbLNGKv1yFHw80cP
      ubE53Gu2VC6SjLUZNcZSU7y7vjkwjR0ileg3j13BMl2kkm0hFXBa7xU4GfiMm72LScwySDoF
      UIPzgECA0Gh0JMQ5h30HcP0GR2oLXf7wozGLpbtvctSK/NSaEMTrS103vpm7y6dsidfn7vSY
      RqP5sJW3v+1HVb1/oEf4Ty4AGEqJdNqC7LvlLtVlrZInkehNQYilT/L+0h28wGfTE339/rVQ
      553FG0xMnGXTDZvBzP4o9rFzjs5c4gcLV4cG9LzAx7ScFpdrBMGRsFeFkp7HmN4/4j6hut+l
      2iYMQgiUAKcjHcJ3DrkNUKmscWYbM5ouBL+bksQ7Ak5jQXdU19j8kLRhEPQJ8wkNHENxt1bH
      dyr7Gg3e3lsMomCLvsceB6PA8V0Mv60XF0trfOfObe5sLrFZLfKTR0tMpGd7fpeKZ1ioKf7q
      5juMZXq59wHSqVkWqgFxO4mwxri+1j+doe45+KLXZ69rOjVtjJUh6knRKTOVNlF0EFsJOBH3
      8KvRpC7fuwVAWK+QjfUP0E3JbYtZky9o6/1qQkMpQb3JwOF5HqGnRk+FeBpo1DZI9+Hqv5ju
      Jq86Fzf5QeEhRydPUqkXuUQBMAn0jjTZUEUGsRDUdMm1YplX9ThSSfQdWAhGhepTVN9oNEgM
      KPbfD+RrBSY6hj9hx4nPXuBqaRN3Y4kj0xcHRpSnx0+yWbYZG8DGMZ6aZrzJg5RNTnBjY5OE
      tczpiSNd53yQX2Gsj5ABTGWP8vNHH/KPMlMRVUoY8sHybVZqDZKmQa66yj/+DbPV/iiC4kTW
      IMytEpgmn1v6a95X0bMdz/av2pvWaigZIrantDeDa0JEKlC92Q2oWCySsFOHWwA2S8ssKYeT
      ieGVWlnTJKgsweRJKvk7HGmqR57RJFEq+Jxd1bg+ExKfsLgfOEwfT6AXGgQy3Lewv+4rXNfF
      ttsvqVqtknyCArBRWuOy1ZEaIH3Kgcdk9tiOvxVCMJ09MvT7TsxNn+NaZYOr6++SMTUuz51i
      KjXOWq1GLNOfu1UIQTx9gmur9wllwJt3fkh27Apnj0Y14K5TJBHb/nwEE5kY6fwa3oMif+dy
      luD+B1w3T5Ka618wfyRt4JWK2BNTrVU/6iDZsQgqhauiyf/BBx8Qt1OHWwXacFa5qUZjho41
      VlFKkazcw9a2OIFArvr8d06Wf/HaPGObCqEJlmM+Z46l0KVPfYj/eLeYSo2T21ba6NYaZAes
      sPsBr5bDbN6vVJK0pnD9J9fPbCw1zfj0a4jsJX6wtM611fsUfTmUUS+TGOdqyeNmDX7vC3H+
      /qdvky//V4QQJO3esSoi227WW+czjeskYyZvHPGwFz8auJsdHbNR+eEdLJWEq6Uq//qvfsR/
      +OHPScbSh1cApJLU9E3Wptt6nBxi5U8FBepulVmvXZpYr/v8TpjiysmI8PaKkSD0JafmU4yn
      LGyhka/1BoX2ivF4hvX1bm9JMV/AeoLsDprTZqULwpCUaeJ7O3OVPvZ1hcbc5EssODaaNbHj
      8UenXkKpDc4dTTA/meRvfarBSv5DEtZgYb0s1vjayejZTWfj/P65wbZUwjaYry+2O8r0FRSB
      ce4yqQuvED/5MkrtwgheW1ujUCiQz+cHtpvZT1QbJdREyMq4bCVRf6+4SWlAyvE0DjcWfsKZ
      eKQOBFJyJhvnS6cnW8d8fn4Mb8nlUiZJKm4QN3SKtf1rf5q0EzQq3ZPPKdWHFrc/yO9cLzsM
      st7ecaRSxDWd8AAEYAtjqSkmMr36/8ONm5TrbUoUpRRzmcWo4gsYS1q8On8TU+/eMZVSraTh
      L5ybIhlrqzxnj/WnzoRI3XlFWyX0IyI00f6i65itxLjYqZdYzi2OJgCe57GyskI+n+dHP/oR
      tm236gHCMCQIgh3/2vUAvX9SSe7d+A4r67eauT6KcnUda0KnMiWohyFSKT4+HnI17J9xOWeb
      xDbfb3mHVlyXL/zaTNcxE2mbqfsB56dTJGMGrpR4zbqA/fgDcEq1rvt2S7WmB6L3+FBK/uSj
      n1Nrpm5s/5M7XK/q1kkpr82NLzTiuoZ08gOf9UH9JczrqHCr/ZVirXify8e739mVU0neeG3n
      3WNUfGrOxF++3/WZ6Pp/0aphsTJjbGgjFsQ4joOu61QqFU6dOsX6+jpjY2P7Vg+wsnmHr6uH
      qM2H/Lj8gONn3qBWXSec10nNxbhaq3IqFse5YLFwLeBLfWQgoev8/lx7tS+rkBN2r3z/z188
      xZhlEtZCPBTSrexfXYBS6B5dOefC6U+JCLBcXOPIzGWuri7wuZOXkUry44Wr+FLhK6j6IWfH
      Ulw5drbv79creaYMASLKCBVEq5ztl9nv2ovdoO5WOX+0xvEp+O77NzGNDNnYhxyb6HZmCCEw
      jd5xKmg1v9sNxpI2R5buUhSDy1ulVC3juJQxRxOATCbDK6+80lrl9tV3rhRW/jpTTU/G+dpt
      VmufplBeIT5toVsaaxlJKagTn7N5kK/j3ZFYffLrO2MDnql60mYBxlIW+BJdEyhdwD6qC0KI
      rmhwxDjtwwAb+G5ujbmJs6wWbqKU4m8WbxImThMzbWJEP7uzcYOLsz52H3dwpbLJbDMHKJQS
      0XTnxv2nWxucK9/g710ZRwh4df4DUjGNM3PJESf0482tV7U1fuB76J0lqEo164UFYQCNuoOU
      Cm9iF14gIQSapkV51o9Jm9jw6jx48HMcr0HdrXDCbeelXExYlB/9lHK4gZGMrrM8FnL7SHMl
      nbe47ezMMqAlNHS9/wNXCAxNgCFQfZLHHgeigx3C8zyMAZkASimKXoihm9SVzWatyP2aj7Wd
      fn3sNL9Y7E8rEjQKxJoLQWcgKebvb4rHKOhUzWYyq2haNOF+7XSGs0dSI6/mCgYYsKPhU3MG
      3jY1qBO6pqNhYGgm+sz0wXuBCrk7JG/+Ab/nfQy3/j8eLPyIMx3RPU0IXvUe4Jm5Vibnw3FJ
      /kQ0VCtjcDs1nMdfKQXxIQ9RgK4LAg2U7ww+romV8iYfLd/taa7XD2FHBZLruphB/3F4oY/X
      jJ7OTpzim+//mJmJ3iowy7RZ9y1y24z1zUqeWO5GazvvJEYeE35Xhux+4driLwd+V6ytUqv/
      IffXfsSZ2cd0wz6G9jaetDha6iVt6Ke1WJmxgxUApST26s/5dELD0jS+Eg/4B9ojYtt2lDOJ
      OCeOxlqrRuZiEvtINFmEENyelzSGUOCFQCI9mGFYiUjQpA5a6A7NcQF4+9FDluU4//n6B5Sd
      4RMrpkwcJxKUcqlMQrf7PvzVcp54PDIATd3k8stfxxxAnTI7cYo3F25HRF9KcXXlLu+99ye8
      bDYbe6huP/wR26JQ3SE7cpeouzWmU+9Trvd3GzvuI/7+Z8b5l1+tcv7o4LrjHfGY6rUQgkss
      I4ck4XUee6ACsLJxm1e0bp07a/ZO1EApCun2pNQMrSurU16O8x1tsP/eDSVWUh+4kmw1VjMs
      jZhQ1Ie0Yb2+eg87dYxkLM3xuVd499FwShhL6a2ii/zGJquVPP/23Z/y5p2PeO/Rba6v3uej
      5bv8cmmBseQkbnMH2q76dI1XaMzOvsr3brzLX9x4l5/f+AWfN1xAwwuDpv7fvtm0YeA3erlK
      pQzJlVf3ZMMVq7f5vc/OUHf65wNl4pto2haz296X8K6coD3is8dsnIf9d4Ht935gAqAAK/cx
      E+Zgu9uXkv8ruc7/PbuJe3Iwj45mCG5+Tuem09+ArcqAiazFMAlQACYkRJRQ1gnX9/izj37C
      vdwS1/IF0vHI/2zqFiuNYOgESmg2jWbRRSlXpBGEnDv+GazsefL6HPf9FMtynMmZKwC8feP7
      A8/VCV3TsbPnqAUav23ksHW9ld8SbNvBNEB3uheIYmmZxo3/ROzmH1Bzd58Fe/4opGIm44nl
      nvsPwoCJ5H7ZHY/vYMkkLI5VOuqSOwVqmxAcnADIgPPB6lDp3vA9cq+ZeJ9PYk0Mb5Jgz9n8
      +Zk6lT6Bsc3QZzptD9YlBSgUwhQkBD2NuB8W1zAz5/iwDJnsS11jHh87ybU+NbVbSNlxirlI
      X1d1n4bU0LVostpmjHQ8SzKWxtBNak6Zs3MbrV1gJ8jA4eXcz5i12s9GE1EVVucYhRCkwraq
      Vm8UmXz4XX7TbvClsQzrud0VvEspCYIoYHd6ptojQPnqOi/N7k87p8c1grdwRV/Dr0fPQEAr
      O3Q7DlQFSmjDb+y+dImNjf4g1ZUE3xwvtlggtuAZCsvWh97dlgpkaRr1bXr9o9ImmcQYk+kZ
      4na3PpuMZbie22wxK1TdOn99853W9yk7SaHZ8sgvNwa2fgUoVB/y5QtZSvXB1OqdqOVu8Eps
      tFcW98tRImDgEi58l19r5puZmka8trvoc6WR48hY9IwuHMuwtPkOa8UH1JslpZ63wnRmfzpa
      bk9e2ys+fyJG5vbPej7fvgAfmABIAQ/k8JXuUSZA6+O7HwQhBLnXY/z7dI7vUOBjP1KJtISG
      bwwOpAghogo5S8PQBO42j0k9HKyHCiHIjp/j29ffY7Na5M37C6x7esvzY+g66laRWq1GrVhB
      Dmj9Wq4XsY1Vjk0kCIPh7UTXiw+oNgqoRm5k/TghG7i+Q27hv/JVu971u6yzgtxFwbvjF3hp
      NkpB1zXBv/xqnd959Vek7e9Rqm2SsDaxzX1KKVfysW0AiEh2/8nYMo3VqFpwqw65eRHq66u4
      xfzBCYDQBPcSgy1zpRQrmd2zJ+iWRuHrSa7/PZtvve5x3auhEpGPfxgUYJgCU2g0tu0AWyS7
      pco6t69/Bz/odrvG7SRjU5d48+EK4+Nn0K0MlY4i84vZk7z7w1+Q28gRi2X6Xn914S1i2gIx
      S8c2Bxv0NafMqcm/wRA/w3ZH2ykAJrWAhw9+ypflEvq2CTUvHCqN0XOgGtsWiGTMZDoT52uX
      U8ykf8RMZv/iDv04i/aKU9NxLi//uIcyxV9d5J/mv83/sPmnBygAAnJTg7e1ahhSnXu84Vhz
      Nn96xaGRGcGTIMCwI0ZhgvbO5PguXjNAXqmu8XvaErXr3+yhG9E1g2PTZ9A0nZnsUW6sP2h9
      Z+oG/rUNVtY3GEtO0g/xoMylo1EXm7FE/8q0UAbI8Md88VyCr10OMdTojadnLZMvOzcY7+N0
      mI9Z1ErDC9Y7oWtefzJiIfjKhRhfvZzq86u9Qe0jf6wQgq/Perirbe6o0PP49Y2f8tqJDJeO
      HnA9QGGyP0c7wFrgoSYeL21YBpJxqfPpS/0nXSeUANvSCZSEoG0Er1VypJr+edXYJGUYfMV2
      yK1fHXgu07Aoe93G+KemznBq4qW+xTZhGJD3clw8kkKGHtl4jUD2MeZL93jj1RBNEyQsnUuf
      m+DRCME4iNJCTgwoJLI1Dbu21Pe7vueyBu/cERfn/uQdqY4szv1KzzoyHuPIxtXW+WO3fs7v
      nmyf/EAFQE4ZrIf9o7iLhoeZ3rsAeGWfU7cl/+vLxxhL7txfVxHlkL9TLKE6vEDr1XKrYXfc
      i9SEmK6TKd7oWqWDMODBysetz6rb5q+u6dQGCHvdqzEzq2HqGkJJ5idNyvXewJVt3Ccdj5wC
      SkkuncjARYviCEGenXDWX6JYGk0IDG145H2/oJTcN2HaghCCzxgrBI063vJ9fj9zn5jVkXkw
      ykmklOTzeTzPw/d9XHf3HdUBYuMmt7XeFUwpxUo67GFx6xnHpk/ytkt4p4HqiP3LRy7/qJ7m
      f3p1nrg9mhApoUjHDH5Uq0PgtHkqGw3MZoPqeEdOzSWtynrxEUopCqVlqlf/gC/mf8jyyocA
      BFqsi2wqCAMC+nu0Ko08r1+OYgsCxbGJBLXGStcxdbfKyakO26CpG185N876SbjnRELrSsm6
      t/v38ZKlceLR9yiXV3Y81jafLK3LFhS9jov9SLz8zMk0/oc/4TcKP+Gl6e5dcWQBKBaL3Llz
      h3fffZfV1eGlZ4MghGB9gKG7Mtu+UXfNxVnoTVKbLsD/fukU/3JiBq8YvZSgEfKGTPHp4+O7
      8h4oXRC3dcITp1GBE2WxK0U1iLwQfuCRDtt6/5GYjb/xMatr1zj16C/4rYTPsViME5tvU6kX
      idtZlkttHf1ubolseq73ukqhq9ucO5Le+gCAbLx7ByhVF7g831krGz03IQRf+tQ0E19M8Z5Z
      49GJkOJZjWKfBnDDIITgfEygPfirHY81tL0teLtGRzHMPiYcYxoa/+PYfb5xqndBGkkAtlqm
      appGPp8nHo/vviCmaYk/mpI9FNoPXYf6sWjlloHkStniQtidQyNDxdlmH9/TsylmmvNFW/L4
      9PzgSqHBNwXKFKhEgooTNVoLZIjUEoCiWMu3uIe28Ipzl88Xfsy5WDvcfyWh01h+m0xijKVy
      qVXIcn1zsxlB7i4UqbsVLhxZYyskojWDcueOFJoVVKppGD9sVUMppRDb8uPPHEnz228c4wuv
      TfOly9MsJNw9rZaX9AZr+cWecXb+WQO4ePYdSqE6o5di+9d7l4rLJ8Yw9N7pPpIA+L6P53lM
      T0/z+uuv96RGG4ax499WCnVwyuJ2o8479VKLC/JDq0F8IuKH1x56/O5LM7wSTxJ2phYXfS5M
      tL0Nv24n8RshV2R8dLWnIwwuhEAaGomJDDW3hlSStUoOO5YBBG6jQHZbTOJsMt4VhYUoqS7p
      biKExmZos1RaZ72SQ5oTCCHwAh8/8Lm3co1yvYjj3uXKyXZu/FaU8uKxFLXGDUCQqyxx5VT3
      qisY7h689GsTLI5oIHdi2jKQuWvNFVf0/EkpidtPltqxja16k22fdry3/axFgREFwLZtLly4
      wOTkJNlslunp6Z1/NABGyuCn4zWufH2GW34dqRS3JiMLMmxI/paVJRUzeO14Fv9hR9+oXMDJ
      mXZU9rPHx3HeKfOV46OV1CmpkKGBDIz2QxSChK3jGyalRoVb648Y3yKRbWy02CV2QtyvIJVk
      buI07yyv8PbDu8yMR2RT90rXeKv8nzHrKxTWr6OJEtq2RU4RFe8cn3hItVHkxMQ7nJhq66qK
      ndseHZ9KUEzu3oeuCcGRxgOC0KdcL7C22Z0m4QYuqT6VdU8GCnXAhWwHFwdQcPaO4tKC4l98
      5SRHx2ME8zrrnkf9VDQpMw8DPnNiHIj0thNeWwV4aRvzWNzW+d9eO8lkemePD4CUGpoZQ5g2
      KtxaSXRiliCMJyjWy7gYrbTimFdEo38G4XZMaT51JyqtHBs/g55sdzQsGZuoL1a5p37FeO0+
      tlFHdAR7WnkqwOfPJgiD7/LFs908OUoGQ/rMt2GNGXtaIS/acPPOW2QX/pT4yk9aPRggoqdM
      xw9mmgilGFoMMOSrUd5TPxyYAOhC8E8vHuX3Lx8jlTIJUXzhtSn+2NvAmLXwCj6/Oz6O3rE8
      vpaM1JzQlZy1e33aJ2dGK7OLHkx0q1EaRHM6CY2UDblYjEK9TMXfol+RxPxityY85OEejcUo
      VCLHgGXarV1EKUUxvoZmCsrfsLkXLCLlCmJ7sKd57oRt8E++MN7Ffy9liCH9ke7TyLQpxneD
      lGHwj8UDPhNXXNZr5IptsmHXa5CO72+/sGFQHfSIXf8ddPweJ/4WngovkNAEvlDopsY/+9un
      OXtbcnFd5+LR7rSBz52e4BsrNmcXFK8e6Z9SMPpFO16iMFAyyrPPyjrXj6e4W3wERoKaU2Z5
      4y7ZsNrShHdCXNeRjV4/vhe41JJRLMFKaDz8skYmGXSlJkQTu/8LVEohQnek1R9gbiLGqrs3
      gzXTLOSftUzUZrtHmFQOtvnkp8kWe8RAORfbj+3//W6F4alRI4aWIBRwNJ7gn8307whtGRpf
      O793e2MLSoLoiMgK3UC6LpqtMUEda2qCn6+8z+cqVY4GS1zSBROJtrHbmqJDmAoSXm8+TLGx
      iXE60uF1wEjpzNkWDV0hUFihwBAC0VzFtp9bhj52H9/4IJycSvL9YJN59k7FKIRgrv4Ax3ew
      zRgCB7OP9+SJYJAKNOD227Zcx3FNiphRn9lTY4YTmtiV3/6xoEQPQZLQo35YMwlB4OikZ1z+
      nrHBnGkwZVk9CWQ7IRH0CsC6u4SdtaIMR4CGZDxlgSWQJjiWooHE1wJcUceVjVbXy8j1Gezq
      GemawMo+/pr26ymbzQc/iloWHaQAoHbOgRhxpR91Jzi01Ij7CUVvz12tWYo5k9QJHA111OJq
      tcp/FEbfKMxO0zDhVwjC7mBUMbEWlXI2BcB0IZ2IJmgkhAIZE2AJhCHAUvjN/lhShRh7SAzT
      0/qug2LboQnBV4N7rDz4KYp6X//5/qOZBrdDzQjQ663t9x2jCcEnXgA6DeB+SNo6CdskNATf
      SifJf+UNVgZMoGHG8LQeUnXafDxbBnDzHxERrM/AvPnWeQ1FqHyQe2vfE2Y0/s1rX+T/OHme
      Pxyb4Y8yUyx6owuEUoplzycnJb/pXkNWbu27733QdYMn0Ex9JxxqevR9gerW/7cjYRtkbI1K
      yYdXrjB24jTvJLP8g34My2rwFj2uaziNIkXlUXNrlCkjXgkAsxXEGtd2ftxCCALhE1d7Kw6f
      n00RnzgFk1NsJWb82U/e4n+5f72LfWO7nqyUYt3zeDM9weKXvoRmGLz607/muF1AygBNM/rm
      6SgVUV4KscvO9tugUCjTQuyXAIxoD3ziBUBJAUOqzAxdY8IMebgQ4+hvv4bQNG6eexX3w7ex
      t23936zU+TsJm6wZ5fFfr9W4kEyiCUHaMNjc+JjXP+Xww40VVj8dx46brTQGhGBCjPi4DXCV
      JJACW+3OVpoci6MV12Cy3RYp/OJv8O21Jf6RW0UXgoeez1tHTqIFPpOFHLomyMfi3PvcZ0m8
      fI5483rX/+E/o/HLP+TLKkBK0JuTXKFQMgQZYDaFO9BtRMf9SRlGto+mD6VObx2P6m1ucQD4
      5AvACGvKWFgjefbraKkEKlCYF1/lxx//km+osEU8dc0PufXG7/HaD79H1gRHSkon4PZKnfN2
      knLo8/r5DX7t5SkWlclGbIuxrRV1YGwEh2YrJ97SCJQCV2GPuBtIpUikQn3sTwAADfRJREFU
      4pxZusmiutT6jaYbPPjtv8+/ufExY+Ui+bMXsY6fQghBvuP329l8NF1nLJOAuI1UCim3Jn6I
      hsRoZu4IQA9dAqXQNCOKXIcuOgovVPi6iSDq3N4/21MRisj22Fdtq2MXgP7P8BNjAyilulKk
      tz6DnXlqJnCYuPLrCE0QKoUwTd79jd9hsdlQ7Wqtxp++fJGxl8+xmEihlOKe3+DrV+bQz1hs
      uB6rRySfOT+G1APOZhJ4lWa2at4jWHEJXcmU1T89etDwhBAExug1Uj6ApvG3jgXUH9zp+s5M
      ZzA/+zq1b/wu9onTowUQpSTerOMWQoCmIQwDzbYhFsePx6lZNg1Nj1bw0CUMXQgcDBQhisCG
      0AoIDK+n2ksqia8CXC165u0bH/GGR8EORvEBM8P1TlAZPl4kr30yCAO991wj9P8aC6utVFzX
      VDQMiTp+gj97+RJ/KQXvTMc4kfVRSvFoNmoF5E4IUjGDT1+c5OF8yOd/fZpQlwhdcGomSbgR
      ZWfOrAf89+YE9bt15saH++e3Vv+uuakL/BFEQClFYEQr7GTG5tXKx8gh7HmdCJWiJkKqWkg1
      9PCbDHRKSVJ62FqVO2rKW8lzQjeQto1rx3FNEx+FpyR1JK4FaM35p0Gg/NZYQxniC4myTDTj
      ABSRAUIwcjbozZs3WVtbI5fL7blBhtr2PpQERQwZ9pm4uz33/9/eufa2cZ0J+DlnZngTdWF0
      sSzJluXEtYMmbdF0kXp3XQQFGnS/BIsCxQLFfiiwP6JAv/Vf9Ac0H/oTugujAdIsFmiTdbwu
      okBRJEoWJfEuSrwMZ+ac/TAkRUqUNJRlSTbnAQiC4vBcXp33XN/zvkoiIzG0131k6J/2nsVM
      XOLVfM8JwpQIU+JZ4PzjB/z93/6De29N8ePILs7BPtnZBTbqdW4u+RMGYcA/vT+DmxDoiB8H
      IGZJ5pSBaip+aMV4d36cX09MMz12sgKcdOoshMAx9TET8qO4gG55kBZC8NNZ51Qnsapltu1q
      Rd1UEJEgNZN/+SO1RpkDU7O3XyDVMoM4bPRdhe28BMIwkJEoMh6HxAgqmkARRXlW5/+uhO9U
      zNUurikQlnV5Z0EnEEgBTNMkmUxSq9X49NNPzx0gQ3NorOX3MCbCMBDmyUqgtUa5x6c3R5/R
      +L2fFpHOs1oBASw6b6Ti2MVejwtCCpomNEpFHqQ0P1hKkdh8CpPT/EHkmL89Qk0o7CiISK/r
      RiEEi9pAbdX50cI4AnhnceJEb9X+bw5fxzAFNdNvrEr7PWwDRZ12T62xDRPRVdfp8RjT5f4O
      vJTW1KWiZmkaFojWJoFdKvGvbxr8S+Yx8b/+iV+V/8ybc2On77v3rUtLIUwLaUXBTKA9Ey0M
      bFxUxEK8oIfxc9FnFAg09lSrVb755hveffddlpaW2N3dPVeADGFE0MpFGP5oIIwuj2ZGFK1q
      nRmL1tq32sREGBH/VNK1EUafa3MeiHbvZ5go18GQvhFxkDumk2MxWC8Ci71fmALyqywsJRBC
      8LPoBpXiJv/wi+8SjRscO7gXvtUrwGIsSi5rM/rmi3tME0KABQ3ZMs2TdBbn9ab24xBHjlvF
      3nEyPNWqZxTUWmMLjbaO7y45uxluzsZZihj85JYDXIy3ByEEou379OUfKQxEIAUYGRnh4cOH
      GIbRafjnQUiJ8iw8VyOk1dNj+d9F0KqJUgJEFGGanagnAokWEq3qPdN6v/c3urwJCDBiKK/O
      IEuclKrSz4zsri5gSInW8IOFJAhQTh2tj0d+6TZre2tqhJnEYaPs3onQWvu7E6ptmSoAhTR6
      02yPZO3RRfQZQTxD4JnRvntdP5yP8j87GRKz8518bRRepP/W6pQ6IDKAY7IXYRB7nQvliO1h
      IAUQQhDp08OcB3maF2TTQnkSYfY/VBFSopSF1od+arQnEWa01zemlCgVOduupIt/lhn+q1rF
      GDncDFRNm7fEHtCyRG1b6hpRlNdE4I9m/bb2UskIEyOHvb/2REtRPf9dRsA8HKH8qV4DafgT
      Zn995NdLew2kIVo7XaB1+8RUtEbR/o32xniMxNoa1fmbSCXQBmjz5HOFKafcY4r9UuhqgFem
      BF15X6ttUCEE0jy+V9zzjGGhPAPlgnIBI9a3AQjDHGie+ZPbMeafPUa3XBxqrRlf+Zz3FuLH
      5r5C+kqHOYJSUTxHnDoqdkYp058PCzPmr32OGuiZMZRnobwIyESrDibIOJ7b9XczjrTi/gUf
      KTmc23bn6e+rf8fbAQN0VECfaU/neaWY5ZKiS3bvU/Rcd7yc7Lu5VgoQhHZDwUz4jemERW6P
      L8gAGFLw74sOsb89ppHLYaw85dcT2z1hOvulL00LYcX93Y5+C/XO3Mzo/OY0v6PSiiKtiK9k
      7XvD0kBakWN/75dPz24N8L2kzeiTT+DJf6NOCDEL4NkN5i7J/Qlw2SY/ffPWWr+aJ8Eva9gc
      H4nw2wd1VjL/STxqcmO8/z2FfuURVhTlKAxT9cwxBaCO3Ed4afQRy725MX5Dlf1aid9trBG/
      2z/ipNqvcHPkklvlVSuBfgVHgJeNFIL782PcngrW+HsQvdu8bbSWJ45Ul8VoIsJUYf3E741S
      junx/q4UX1tEqAAXijDMw8M+1Vr4ti7fXwfeMcsdT8mNZ/+L1zzc90o2yj0uA4eFUAEuGH9W
      qdHaQJhxlBdBGBcTPeVF+X5KYed2aRbz/Ep8xdT/fYJWCq0UN73g7tJfJ17JNcB1xTcYM1Gu
      h7CirbXBxWwfXwSz4zFGNtZ5w6nw/e8kuXVQ4fdP/8Jdyvx8tglcTJSXV4lQAS4aaSCIXdn+
      9mlYpuReeYUfz1lIMcrUaJTfxEtYpmQYGz+ECnDh+CfR13cu/cvvjfdccrcu6eT3uhIqwJAR
      Ma+vcl4Fw63+IUNPYAWoVqtorV8oQEZIyHUjkAK4rsvTp0/xPI/PP/+cnZ2dIwc9+sxXSMh1
      JNAawDRNJif9wHPlcpmlpSXfelGpwI3bUxcX/jIk5KIIpACO4+B5HuVymYcPH+I4DlLKgS/E
      hIRcNwIpgGVZvP322y+7LCEhl07YLYcMNaEChAw1oQKEDDWhAoQMNaEChAw1oQKEDDWhAoQM
      NaEChAw1oQKEDDWBFEBrzbfffkutVuPg4IByeTjvj4a8fgRSgEKhwMjICOvr63z22Wc0m+cL
      xhwSct0IpABSSur1OkIIxsbGqNVqL7tcISGXQiBjuFQqhW3bzM3NdWIChIS8Dgh9ztsq7QAZ
      bbfbJ72Df1E8m92llk+f+uyxd/yIhG1jaw3Bf3sk/4HyPVaOq85fdOJrDZRvW34vmP9AdXjF
      ZHVuBejmrEq1Oa0gnudhGGeHSgpSqZPSCvIPOKlug+TfL02lFLJ1J+I85ejOv7t+50njrLQG
      kfurLqsLUYCL4KjwrkNa3b3SdUsrlFXwtE5L58rOAZRS5PN5qtUqGxsbOI7D+vo6Wmvy+Txq
      gCuUjuNQKpUoFovs7u7iui6lUgmAXC4XuEcEODg4oFarsbOzQ7lcJp/Pk8lkAMhmswPVsVQq
      4bou6XSaer1OOp2mVCp1yhsUrTW5XA7XdVldXcXzPPb396nX61SrVQ4ODgZOy7Zt1tbWcByH
      lZUVGo0GxWIR9xQX6kc5KqtKpcLW1hZwPlk5jkM6naZWq7G6ukomk3lhWbmuy9raGrVarbON
      382V+QVqC66toYVCgfn5edLpNKurqzx69ChwVJpqtcru7i6Nhh/T1jAMCoUCSim++uorHj16
      FLhcbWG3f3///n2+/vprHMehUCgwMzMTOK3t7W2azSb7+/uUy2VmZmZ4/vw5kUgE13VJpVKB
      0vE8j83NTWzbxjAMlpeXcRyHVCpFoVBgenqaZDJYPK9Go0EmkyGbzRKLxVheXsZshSl98uQJ
      77//fufzWRyVlW3bLC4ukk6nyefzA8vqjTfe6MjqwYMHpNNp9vf3B5KVUqpHVl988QVCCJrN
      JtVqlcnJyR5ZXdkIkEgkME2TO3fuUC6XMQwD13XJ5XIIIQbq1cbG/BBGt27dolqtdj5ns9mB
      3LhorRkfH0cIwY0bN2g2m6ytrXHv3j1KpRJ7e3uBd8DaaUWjUZLJJEqpTsOvVCoUi8WzE2lh
      GAbJZJLp6Wkcx+Hg4ADP88hkMriuO1BasViMaDTK3bt3KRaLpFIpxsbG+PLLLxFCsLe3N1D9
      umUVj8fJ5XKUSiUqlcpAspqYmCAWi5FM+oHINzc3WVhYYG9vb6D6SSl7ZOW6LpOTk1Qqlb6j
      yZWtASqVCvl8nmQyieu6TE1Nsb29ze3bt2k0GkSj0c5C6CwKhQKVSoV4PI7ZCrG0t7fH4uIi
      tm0Tj8cDzSe11mxvb+N5HlJKRkdHqVQqaK25desWtVqNRCJY3ACtNRsbG8RiMWq1Gjdv3iST
      yZBKpUilUgOl5TgOm5ubnfIsLS0BYNs2kUgEx3GIxU4Pwt2mPfKOjo7SaDSYnp5ma2uLO3fu
      4DgOlmVhBHDtqLVmZ2cH13U7slJK0Wg0mJ2dfWFZua7b6akHSct1XTY2NjqyWlxc5Pnz58zM
      zBCLxWg2mz2yujaL4JCQqyA0hgsZakIFCBlqQgUIOcazZ8/I5/Nsb29fdVFeOuEaIOQYW1tb
      fPzxx3z44Yc8fvyYDz74gI2NDbLZLPF4nImJCT766KOrLuaFEI4AIceYm5vj/v37eJ6H53ks
      Ly+TzWZZWFjgvffeY2Vl5bUxiAxHgJBjaK079ji2bWNZFp7nYZp+GFjHcYhGoxdmjnGVhAoQ
      MtT8P12vi9weLM1nAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2de2xj153fv/fBey/fD1Ev6i2NRo95eDyeGduzduzESZ1snNhNYmyyzWbT
      NsHuFm2KFrstkDZAWxTFokAXC3Sz2yKNs9tFUDS7TZw4jr3ZxEns2J7xjOfheWqk0ZOUKPH9
      5uV9nP7BEWcokZIokSJFng8gSBR57znkvV+ex+97fochhBBQKC0KW+8KUCj1pOoC0HUduq5X
      +7QUSk2gLQClpaECoLQ0VACUloYKgNLSUAFQWhoqAEpLQwVAaWmoAChbQghBJJFBsxoGqAAo
      W5LKKvi3/+NnUNTmDG5SAVC25PrcGlJZBbKi1rsqNYEKgLIlV6b9UFQN2RwVAKXFUDUdNxcC
      GO93I56W612dmsDv9IWEEPj9flgsFqTTaUiSBFmWYbPZkEwmYTKZYDKZallXyj4TjKVhEg3o
      7bAhnmpxAQDA3bt3ceLECczOzmJsbAyRSAR+vx+iKGJtbQ0TExOF2QLqCD34TC0GMTnghlE0
      IBzPNOU1ragFGBsbw8zMDEZHR3Hnzh20t7cjm82C4zjoug5CSNNOl7Uiy8EE+jvtyCkawvHm
      nAqtqAWIRqMYHh5GIBDA2NgY4vE4hoeHEYvF4Ha7wbL3hxQP/k05mCSzCiwmEYQQeIMJcBxX
      7ypVnR0LgGVZjI6OAgBsNhsAwOl0AgCsVmsNqkapN3JOhUk0wMCziCaz9a5OTaioBaC0Ftmc
      CkngYZIMSKRz9a5OTaD9FEpZMrICo8jDKPLIyEq9q1MTqAAoZVE1Ap5jYRQMNBBGaT0UVQPP
      cRAMHDSdIKdo9a5S1aECoJRF0XQY+Pwt4rRKiKWabyBMBUApi6JqMHD5W8RqEptyIEwFQCmL
      qung7gnAZhKb0g5BBUApiarpYBkG/D0BOCwSwolMnWtVfagAKCWRFRWC4X7k12mVEGvCYNiu
      BLDu+dn4Q2keMrIKo2goPHZajYg0oQAqMsNduHABIyMjWFxchNlsRjqdLtijjUZjwSpBOfjI
      igbxwRbAIiGaaGEBAIAgCAgEAoU1AE6nE9FoFHa7HbIsFxLjEkKa0jrbSiTTWUgGDqqaD4BZ
      jQaE4unC42ZhxwLQNA2iKEKSJMTjcdhsNsRiMTgcDiQSCVgsFuoGbSIUjcAoCeD5/C3ispuQ
      yipgOQ4sw9S5dtVjxwLgeR4TExO1rAulgZBzalEXaH1GKKdokITm8VDSr2lKSWRFg/jAjc7c
      E4CiNpcdggqAUpK0rMD0wCwQyzIwigakss3lCqUCoJQkvxageAWYy2ZEON5cwTAqAEpJMlml
      KA4A3JsKbbJYABUApSRpWS3qAgF5O0SkyWIBVACUkqyvBnsQh1VCNEm7QJQWYOMsEJC3QwSi
      6TrVqDZQAVBKkm8BirtAdrNIZ4EorUE6q8C0oQtkMQpIZZprUQwVAKUksqJB4IunQU1SPg7Q
      TM7fimLasiyDEIJUKgVRFJHL5QquUKPRCEmSalVPyj5CCIGsqJu6QALPgWEARdWL1gocZCqy
      Q9+4cQNOpxPLy8uYmJjA6uoqFEWBwWAAIaTIK9RM3xKthnbPycswm6+jJPBIy0phsfxBZ8cC
      SKfTSCaThRSJU1NT6OzsRC6XgyAIyOVyBRs0IQRMEzkGWw1FzS+HJLoODcUCMAo8UhkZFqk5
      DHE7fhdmsxlnz55FNpuF3+/H4cOHEY/HMTg4iFgsBpfLRe3QTUJOU8BxLDieA7fhOkqiAYpG
      Cjbpg05F74LneVgsFhw6dAgA0NbWBgCw2+3VrxmlbmiaDo5lSrbiJtGAdBNNhdKvacomVE0H
      x7Io1Yk1Sc2VJ5QKoAXwBeK46wvv+PWxlAyLSSjZApgloamCYc3RkaOURdN1/M8fvQ9PuxUj
      Pa4dHRNJZOG0lJ7SNjZZF4gKoMm5tRBENJWFoYJ5+3A8A7tZLPmc1SQg1ERrApqiC9Rsy/Sq
      BSEE/+9Xt/CVT55EOLbzmzaRltFmL73jpyTwTdUCNIUAvvmDC1jwR+tdjYZjJZQEIQTHhjvA
      MHmDmy+YwC+vzG8ZqAzFM3CU6QJZTQLS2ebxAzWFALyBOOb9sXpXo+F4+/oSHjvSC4ZhYDOL
      iKVkXLy9jD/7/ntYCSXLHhdLZuGyGks+ZxQNSMvNkxuoKcYA4XgGvmC83tVoKFRNx7kbS/j6
      F58EkF/PG4qlMe+P4rnHD+MvX7+Ch0e7cXXGj2gyiz944RQGOh0AgFQ2B7PRUPK8ZsmAFG0B
      GgdF1fJNeyBR76o0FAv+KKwmES5b/pu802nBWiSFtUgSzz8xBpfViGAsjc8/cxTPnh7BK2/f
      KRybyiowS0LJ85olAalM84wBDnwLkEjn4LKZEIimoBPSVFnL9sJ7t3x44lh/YS6/y2XG3EoU
      qawCu1nC7z9/qvBaT5sVP353GtFkFnazeG8tQOkWwMCz0HQduk7Asgf/s66oBVhbW0MwGMT0
      9DRWV1dx584dBAIBzMzMwO/316qOWxJPy/C4rZAVDbpOHahAfvbn6t1VHBlqL/yvy2XBe7d9
      6Gu3bbpxBQOHRyd78KsrC5AVDTzHgi/j9mRZBgyYgmP0oLPjFkDXdSwsLMDlcoFhGKysrMDh
      cGB5eRl2ux3RaBQdHR37nhw3Ek/DaRGRkRUEIkm0O0pP3zUbsqLhyswqHp3wbHoumsxC03S4
      bcZCMlunRcRKMIlnTg6VTHD7xNFe/MnfnMepsS6YjYaySXCJroOAIKcoYHDwv3B2LABZliEI
      AhKJBBRFgSiKCIVCEEUR4XAYoijWxQ0aTytwWI3geQ7+SArdbtu+lFtvfKEkvv3qZZyZ6IFh
      w8qteX8ch/vaYDDcv7wWkwSLScBob1tJJ6en3Q6jaMBSIAGHWSrr9mTYvFWaYbimcITu+B0Y
      jUYcP34cAKCqKjiOg6ZpRb/rQSyVhdNqhN0sYWktjodHu+tSj/0mk1URSWQxuxzBWL+76LlL
      0yt4eLSr6H+SwONwbxsGuxxlzznW14Y3Ls2h3WEu+5r8zc9A1ZqjC1TR1zRz780bDAawLLvp
      dz2I3vOtdLdZtpzbbjYyOQUmyYDL08VjL03TcWcphEMbfD8sy+DrX3wCtjIWBwB47EgvLk/7
      y9oggPw9YBR5ZHLNMRN04KdBI8kMnFYJ/Z32looGp7MKTo97cH1urRDV1TQd33n9CiYH20tG
      ctd3fCxHb7sNZtFQNgi2Tj47BBVAXbi9EMQvLs8VHkcSWdjMItx2E7I5tWo+FUJIQ/veU1kF
      HrcV2ZyKxL1UJT98ewqZrIIvPfvQrpakSgKPRyd7t51IMIr5dcHNQMMKIJLIbNqWU9N1fPdn
      1/DKO/mgja4TxFMy7Ob8t91Alx2La9WxREx7w/jnf/oa1iKpqpyv2qRlBXaziFPjHrz81m3M
      +6N45/oSvvqpRwpbm+6Gr37qJI6PdG75GrMkINkkm2Y3rAB+/O40/uq1q0WmranFEMySATzL
      wh9K5veyZe/vZTvU7cT1ubWqlH/uphejvS78xQ8vNmR8IZXJR2s/99QkVsMp/Of//Sa+/IkT
      e969hefYbVuP9fxAjYxOCEKx7dM4NqwAVoIJXLqzjHg6vzs5IQTff/MWXnhiHKfHPbgxvwZF
      08AwDDguf8EmB9sxuxzZc9m6TnBrIYjf+/Qj6HCa8e6NpT2fs9pkZAWSwIPnWHzts2fwLz/3
      KI4Mtm9/YBWwGAWk5cZuAbxrcXzj27/Y1irfsAKIpWQ8dWIQf39hFgAQiKaRzakY62/DsZFO
      nL/lQ1bO72O1bn/wtFmxHEzsOSdRMJaGpumwmyV8/MwIfnphtuHyHKVlpWBYEwUex4Y79y0V
      jVE0INPgjtBpbxjLocS2i3caUgCqpiOZyeFzT0/i7etLkHMqLk4t45HD3WAYBiMeJ4LRNL7/
      1m3YzGLhwpskA6wmEat77LffnA/g4dEusCyDoW4ncqoGf7ixpli3MqzVGpPY+ItippaCODLY
      gVvzgU3PPdilbUgBRJNZWIwCHBYJD4104o1Lczh3w4sT94I7Bp7Dlz9xAoc8TvzjT5woOvb4
      SCc+uLu6p/IvTa/g2PD9geATx/rx5tWFPZ2z2pTK379fmERDQ8+QEUIwuxzBc4+P4vpcsQBi
      qSy+/q2fFwJ5DSmAQDSFTlc+GvmZD03gJ+dmkMjk0NdxP//Q8ZFOfPjk0Kao5cOHunDuhndP
      5ftDSfR33i/rzIQH52/59nTOapKfolVhkko7NmuN1OCb5SXSOfAcixOj3Zj3R6E/0H196+oi
      ZnxhLN2bLaxIAOtGt3UIIUU/1cIfSqLTmb+xbWYRn3t6As+eHtnR9N5IjxPxtLzrRRuJtAxF
      1WE13e9euO0mWI1Cw0yJrl/Qelm/JYFr6HXYM74wetxWGEUeDosE/z2HgKrq+PmlOXzs1Aim
      vfk0MRUlx52ZmQEhBMlkEr29vVheXobFYilkhz58+HBV3sByKImedmvh8VMnBnd8LMMwONzX
      htsLQTwyttkpuR2rkRQ8bmvRgJJhGJw87MF7t3x47mx13uNe0O71YevlxxcMPGSlcQUwtxIt
      +KOGPU7M+MLwuK24NL2CEY8Tj072FHoJFXUi1y3OkiTB7/fD5XIhGo3CbrdDlmXoul4VO7Q/
      lMDJ0c6yltztODbUjrevLeKhkY6Kj51bDqOvw7qp7OPD7XjpJ1fw7JnhkhnT9pNcTs1/zrq+
      689oL/BsfhvVepS9HYQAN+fX8LvPHoeqqhjutuPmfABnj/Tg0tQyHj/Sg+EuO1569TJyOWXn
      AlBVFYQQCEK+ayBJEuLxOJxOJxKJBMxmc1Xs0IQQBGNpeNptu7bbHhnuxN/+6jY4jqt4atAb
      SGB8wL2p7IEuJ7I5FdmcBqupvFlsP2BVApZlIRgMdWkFTBJBTtEa0g6dyuYQiKbR1WYDz3MY
      7nHh7y7MguU4zK5E8dsfOw6rSYBg4JBRtJ0LwGAwFOX/rwWprILppRBkRYNR2P0Az2YSwTB5
      n9D6mtidQAjBwmoMv/n46KbnWJbBkMeJqaUQTm3oWumEQNfJniwIlaBoGjiWqVsXSBQatws0
      tRjC0aGOwgYeTosRiXQOsWQWhBBYjPmUj30dNnjX4o0zC+QLxPGNb7+Btz5YwGeemtjzBgwT
      A27MrlQWFVZUHfG0XDYnzsSAu2SOzVffncYf/vlPcXXGvy8Bs4y8efeW/YRl8vaTXAOK4MLt
      ZRx7oOsrGDhYTQJuLQTR7jRjvUMwMdCOa7NrjSEAVdPxrR9fwu/8g4fwLz77aNFi7t0y1O3E
      rK8yASQzOUgGftPeWOsMdjkxv1Jsuc7ICn52cRZffe4k/uaXN/GTczNF025bEU1md7XpXDKT
      g6VM2pL9QjRwkJXGGgNouo6ppSCODxeb+QY6HXjt/AxGe1yF++rskT6cu+ltDAHwHIuvf/HJ
      TauY9sJobxvueEMVHTPjC2O0r62s+Nx2I1Y2RIQv3VnB5KAbk4Pt+Pdf+hDen1rGz9+fK3n8
      Rr73ixv45ssXKm41UpnNW5juN6KBq3kLEIpndhxw84eTeOnVK+h0WmA2FkfIhz0OXJtdxWhf
      W+F/FpOAFz98pDEEAKDqm651ucwIxzMVXaRzN704NVZ+SaXVJELgOSTuGfQA4LXzM/joqREw
      DANJ4PFPPvkw3ttB0IwQgsXVGMLxDM7drCxwl8nVzwaxjoHnkKthLOCDu6v413/2dwUv2FaE
      Ymn88Xd/jcN9Lnzts2c2PT/U7YRRMMDTZi36/+OTvY0jgGrDcyyMogGB2M6CVxlZwbw/ion+
      rR2VvR02LK7ls9DFU/mg2XD3/XW2TquEQHT7MjWdIJHO4WuffRQ/evtORWts01mlblHgdSSR
      RzZXugu015Qp8bSMb796GZ9/5ij8ka09WIqq4Zs/uIAXnz6Cp04MlmwZPW4rPvOhcTitxWM7
      lmWaVwAMw2C014WltZ2lTLwxH8B4n7tsPpx1hrudmLtnuZ72htHfaS/qMpklAZLAI56Sy50C
      QH7Q3+kyo7vNAo5lduRdXycjqzDu0fe/VwR+cxeIEILbi0H8u2+9sSdb+qwvgtFeF44PdyCw
      RfRd03X85etX0d9px+NHe8u+judYvPjhIyW7tk0rACCvfO8OBEAIwbvXvVt+iOv0ddgwd28g
      PO0NYWLAvek1A512LKxuvT552hfGUJejINTpCnZw2Sp3536xcVFMRlbw3b+/hpdevYzRXtee
      vFM35gM4OtyBdocZq5HUpjFSMpPDj349hf/2f9+Fqmr40rMP7doWUlIAhBBEo1FEo9GG88FX
      QpfLgrUddEeSmRxmfGEcfmCQVI6hbicW12LQdYI73hDG+zcLoLfDvmm2aCPzK1EMe5wA8lNy
      d5Z2PmCvpxV6HaNoKOoCffvVy9AJwX/6px/Gbz42ig/uru763pnxhTE50A7BkN+lcmNX69xN
      L6a9IXz8zCF85bmTe4qHlBSApml4+eWX8corr0DTGm+ud6e02Y0IRLfvWrxxaR5PPtQP0bB9
      t8Jiytu037+zjEg8C3eJBeTDHicWVsuvTSaEYN4fxVC3s/D6uxVM2W6Vu3O/eHC3SFXTMe0N
      4/MfOQpJ4NHhNENRNSR3McVLCIFR4NFmzwcwLabNe5It+mN44ng/jo90bkoKViklBcCyLMbH
      xzE0NFS3hFfVwGGWEElsvSJIVlT88vIcPnpyeEfnZBkGn//IEbz06hW4bEYYSkR/Bzrzi/NL
      fQPqen72J5aSC9kXXFYjkpkcEjtcaJ7O5mAx1bsFuJ8baN4fRW+7tTCTx7EsRjyuXY0DsjkV
      XS5LYX9ip3XzNVwOJeBxW0sdXjFlu0CRSASx2P2LSAjB8vIyMpkMQqEQstksgsEgZFlGOBxG
      JtN4+0atzwdvNZd8eyGIkR4XHNbS0d9SjPS4MDHgxsOjXSUHVkaRh6aRkqlD/vqnV/EXP7yI
      LzxztHAsyzI41OMqeNS3ghCClQfs4vUi3wLkuyY35gI43FfcFTw+0oFru0hQ8P7UCrrbLIXH
      HQ4zVsP3u7GEEEQSWbjLbOFUKSXb/JWVFVgsFqiqWnSBFUXBzMwMWJaFqqoQRRHLy8sQBAG6
      rhe8QtVeH7AXXFYjwvEMPO7S3Zu7yxEc6nFVXN/ff/4RACh5HMsw6G6zYNobxkMPpBjJ5lRc
      nVnFH//eR2Hg2aJjjw61471bvpKD6geJJLKQBB6SwNf1MxYFDtlc3iB5ayGA558YK6rP+IAb
      P3jrNj731CTEHcZ4Xjs/g3euL+HffOFs4VydTjP84WTh8XqShGq9/5J3hcfjwcWLF9Hf31/4
      n6qqCAaDEAQBsiyD4zhkMhnwPI9sNguDwVBkg96v7NDb0d1mgTcQQ5er9DfmXV8Ynzp7uOL6
      cvcGXuWO++yHxvHSa1dwdNBd+BI5f9OLycF2cOzm4x470oM3Ls3hri9UGBuUYtobxGCXo+6f
      r1kyIJ7OIp3NIRhNY2hDnRxmEc+eHsG3fnQRxw914sq0H//shdNlB6yKquGNS3P4xpeehFky
      FM7V1WbBzflA4fGiP4r+TlvV3n9JAXi9XnAch9HR+65InucxNjYGSZKgKAoEQUAul4MgCFAU
      BTzP1yU79HZ43FYEopmSYxlCCELxDLrd1qqPdYY8LkiCAbeXwjg6lDdnnbvpw6d/Y6xkWUaO
      w6d/Ywzff3MKf/SFs2XtGPP+GA71uuo+NrMYRWRlDf5wCt1uC0SB31Tnj5wcwsWpFbx5dSkf
      aFyNYbS39ExbSlbBcyysJqlIJJ0uC0KJ+9dvOZRCf6ejau+/5F16/fp1RKNRXL58ufA/hmFg
      sVjA8zyMRiM4jiv8lqTy6bTrTZfLgpVQ6e2TNJ0gXcMpxU+dPYxX37kDneQz2C2HEjjUW36z
      6pOHu5GSFVybLd13JoTgri+yZYbn/WJ9Yfy0N4wRj6ukYDmOxR99/iy+/jtP4NkzI3jz6mLZ
      84Vj+Z0pN7YQVqOARDoH7V6k3BuIo7e9OgNgoIwAnnnmGbzwwgs4efJk1QqqF50uC/xloomr
      kRRcNmPNfPxHhzogqxquz67he7+4gY+dGinrNAXyN8xXPvkw/ur1q/jg7ir++/ffw+ID06k6
      IYimsnUfAAPrs0AqppZCW8ZPeJ4Fx7J47Egvrs2ulp2Q8AXjRYPf++UYcHy4A3/7q5vQdB1z
      K5Gi5Ah7peSVF0URVqsVFotl35It1Yo2mxGReKbwDfIgvkC8sDNiLWBZBr/90WP485cvYGE1
      ho+fGdn2mL4OOz52ahg/eOs2jgy247/+n7cLaxAysgqiA8Y6+4CA/HsjOsGCP4ou1+YbdyOi
      gcdwtxO3FoIln1+LpMqe5x997DguT/vxH7/zK5gkA9y26u0C1Jj9lioiCvy9nU/im7oO3kAc
      3e7tL95eGPE48dzjh3HiUNeOgzbPnhnBs2dGCknA/uR75/CN3/0QXn33Ds5M9jTERoAcyyKW
      kmE1C5tMZuU4MtSOGV8YJw9vdtyuhJN48vhAyeMEA4c//K2ziCQzONRTuru1WxpjpFpDWIbB
      bxzrwzvXN+f39K7F0dde2y2VGIbBc2cPo7dj5+Wsb0QCAANdDnzhmaP4xv/6BZbW4viHT47X
      qqoVwXEMcqqK/g77jm/IDqcZq2Uy7AWj6S2Xr7odJoz2ll+rsVuavgUAgEcne/Bf/vrX+K2P
      HClEGFVNx+JarKr9yVrx6GQPDDyb399rn9YdbwfLMDBw3LZxiwfpcuX3KiaEFN3I67NxbRWs
      364WLSGANpsJTquEl9+aAsPkp+d+/cEiBrscW24Z1CgwDLOrHEe1hOdYSCK/ZcxiI2ZJQCan
      ggBFqWVSWSV/vjpYvBvj62Qf+MIzRyErKggB/sN3fok3Ls/hyx8/sf2BlJIwDIM/eP5URVOy
      RpGHqumb1hGE45kdjyOqTUu0AEDevzNyb+O4J4715eMadTaUHXQ27k65HQzDwG03YS2SKsq9
      Goylt9yZspa0TAvwIJ0uCzoaYC69FfG4rZsCk8FYum7XoyIBbDS51So5LqV56XZZNu3fEIyl
      4bbv/wAYqDA57u3bt8GyLFKpFHp6erCysgKr1YpUKgWTyYRDhw7Vsq6UJqDbbcX5m8XLJcPx
      TJFrdj+paAzAMAycTidyuRxWV1fhdDoRjUbhcDiQzWarlhyX0ry0241YCSWKEusGY2nYzUJ9
      Ev3u9IW6riMcDsPlcsFgMIDjuEJm6Hg8DovF0pBuUEpj0d1mQzCWBstyYFkGup7fj9luMdbF
      ULnjEjmOw9mzZwEA7e37sxshpflgWQYWo1DIwarpOlSNVD0x2o7rs5uD1kP1G38olJ3Q3WYt
      bDqoajoYBnte3L5baD+Fsu/0d9gKWTDiaRkWo1A3gx8VAGXfGep2YvFe4rBgNFO1Be67gQqA
      su/0ddiwHMwHw0LxrV2gtYYKgLLv2C0SEpn8MsdIIgOXlQqA0kLwHAu33QRfMIFANE27QJTW
      Y6DLgRlfGLFktm5OUIAKgFInPvrIMF555w5mfGE4aReI0mp0ucz4Vy8+hr5OO6x1tKUzpMo2
      znUPELVCUA4CFblBw+EwzGYzstksjEYjMpkMTCYTMpkMJEmCKDb+8kIK5UEqch9ls1ksLS2B
      4zjoug6e56Fp93cMf3Ajbbo+gHIQqEgAfr8fExMT8Pl8SKVSMBqNSCQSEEURuVyuYIPeuOqf
      QmlUKrJDS5KEVCoFnucxMDCASCSCgYEBxGIxOJ1OaoemHDjoIJjS0tC7lNLSUAFQWhoqAEpL
      QwVAaWmoACgtDRUApaWhAqC0NFQAlJaGCoDS0lTkBVoPGq/7fDYGkan/h3LQqMgOfenSJRw5
      cgS3b9+Gx+MpSo5rNpsxPDxcy7pSKFWnohagvb0duq6DZVmsra3B4XDQ5LiUA01FLUAgEADH
      cRAEASzLIhKJwGazIRaLwWw2Uzco5cCxKzdouUMYhqFuUMqBYlf5qOlgl9Is0K9pSktDBUBp
      aagAKC0NFQClpaECoLQ0VACUloYKgNLSUAFQWhoqAEpLs2MBEEIKhrdkMglFUZBIJKAoCpLJ
      JHK5XC3rSaHUhIqsENeuXcPk5CTu3r0L4L7fh2EYsCyLycnJ6teQQqkhOxYAwzDo7OwEIQQm
      k6mwBiCRSMBqtUKWZWqHphw4KkqOm0qlIIoiWJZFX18fotEo+vr6EIvF0N7eTu3QlAMHTY5L
      aWnoXUppaagAKC0NFQClpaECoLQ0VACUloYKgNLSUAFQWhoqAEpLQwVAaWmoACgtTcWJsQgh
      mJmZgdPpRCwWg8PhQDweh8ViQXt7ey3qSKHUjIoFoOs6AoEAjEYjWJaF1+uFzWZDKBRCW1sb
      dYNSDhQVC4BhGPT398Pv98NgMIBlWcTjcfA8T92glANHxW5QQkjBFp3L5Qq/DQYDDAYDdYNS
      DhTUDk1paehdSmlpqAAoLQ0VAKWloQKgtDRUAJSWhgqA0tJQAVBamj0LgBACr9eLWCxWjfpQ
      KPvKngWQy+UgyzKWl5erUR8KZV/ZswBYloWiKGX3DqZQGpld7RP8IAaDAW63GyaTqRr1oVD2
      lap6gR5Mjsuy7JatAsMwhecr/btVz9eIdarl+fZS5k5fU3UzHJAfGFf7w9oOhmGgaRpYlq3a
      +XZaP13XtzX/1eL9rpfNcdy+vt91tnrf1X6/G1kvu1IBbHquFgKoF+vCq0e5AOpWdj3KrWfZ
      1fy8D3QcIJvNIh6PIxgMYmVlBel0GgsLC1AUBZFIpKZlRyIRKIqCxcVFxONx+Hw+RCIRxGIx
      yLJc07IDgQAIIZibm4Msy/B6vUilUgiFQtA0rWbl6rqOYDAIWZYxNzcHRVEwPT2NXC6HQCBQ
      s3IBIBwOQ1VV+Hw+JBIJ6LqOUCi05897z4PgehKPx5FMJhGJRAoXvqurC+l0Gn6/H06ns2Zl
      r6yswOPxYGlpCfF4HPF4HGazGWazGQ6HA6Io1qRcVVWxsLBQ6PLduHEDdrsdiw8nimEAAALU
      SURBVIuLyOVyMJlMMBqNNSl7/XMNBoMQBAFerxdGoxFLS0tIJpM1WxNOCMHKygoYhkEwGMTa
      2hrMZjMURYEkSbDZbLsu+0C3ADabDYQQ8DwPURQhCALC4TCsVuue+pfbQQiBw+GALMuw2+0A
      AEmSwLIs7HZ7TddDcxwHi8UCp9MJhmEKQgAAh8NR07JNJhN4nsfAwABisVhhf7jBwUGIoljT
      qXC73Q6WZeF2uyHLMhKJBEKhEOx2+57KPfAtAMdx8Hg80DQNFosF0WgUkUgEgiAUBoi1QFEU
      cBwHu90Ou92ORCJR2Dqqlv1iVVUhCAKi0SgYhsHRo0cRCATgcDiwurqKdDoNs9lck7JTqRQE
      QUAmk0FbWxtcLhdWV1cLn3cty1ZVFdlsFpqm4dixYzCbzUilUohEInv6vJtqEEyhVMqB7gJR
      KHuFCoBSVwghex47tOwYgNJYEEJw/fp1cByH8fHxLYOD77//Pnp6ehCNRiGKIhYXFzE8PIwP
      PvgA/f39WFtbg8fjgd/vx9NPPw2GYeDz+bC2tgaXy4Vbt27h6NGjuHz5Mrq6ujAxMQGLxVJx
      nekYgFI1CCF4/fXXC/PykUgEIyMj8Pl8CIfDeP7553H+/HlkMhmEQiG8+OKLuHr1Kp566im8
      /vrrsFqtCAaD8Pl8OH36NGZnZzE4OAie5xGNRnHq1ClcvnwZiqKgo6MDN2/exKlTp5DJZMBx
      HE6fPl1xnWkXiFI1GIbB+Pg4hoaGEA6HwbIspqamEIlEMDQ0hN7eXsiyDE3TcOjQIXg8HgD5
      2aW5uTm0t7cjEonA4XBgfn6+EGPo6OhAZ2cnwuEwpqamwLIsbt68ia6uLly8eBF2u33XM0G0
      BaBUlfU+PSEEqqqCYRiwLFv4WbfOr6fSvHPnDqxWK9ra2sAwDFRVLco2uP4YyE+Frk9tK4oC
      QRCQy+Vw48YNjI+P72oKlgqA0tL8f2VQ2NuNiy3hAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      YE/yUbivhwYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      iSsAl3XN/w8yzem2YiZvoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      PzA3usTDOLKmAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
